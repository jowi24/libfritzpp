HTTP/1.0 200 OK
Cache-Control: no-cache
Content-type: text/html; charset=utf-8
Expires: -1
Pragma: no-cache

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> 
<html> 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 





 
 
 
<head> 
<!-- lang: "de"; ethnr: "lan0" --> 
<!-- OEM "1und1"/"1und1", Seite "fon"/"foncalls" --> 
<!-- var:usePSTN: 0 --> 
<title>FRITZ!Box</title> 
<meta http-equiv=content-type content="text/html; charset=utf-8"> 
<meta http-equiv="expires" content="0"> 
<style type="text/css"> 
html, body {
margin: 0;
background-image: url(/css/default/images/hg_verlauf_1600px.png);
background-color: #fffebd;
background-repeat: repeat-x;
background-position: 0 0;
font-family: Arial,serif, sans-serif, cursive;
font-size: 13px;
color:#3F464C;
}
body {
margin-top: 10px;
}
p, table, form, div, textarea, label, ul, ol, li
{ font-size: 13px; padding: 0px; margin: 0px; }
input, select, button
{ font-size: 13px; }
div,ul,ol,li { text-align: left; }
tr,td { padding: 1px 0px; margin: 0px; text-align: left; }
img { border: 0px none; }
a {
color: #003060;
text-decoration: none;
}
a:hover {
text-decoration: underline;
}
a:link p { color: #003060; text-decoration: none; }
a:visited p { color: #003060; text-decoration: none; }
a:active p { text-decoration: underline; }
a:hover p { text-decoration: underline; }
.fw_header { background: url("/html/de/images/kopfbalken.gif") top left no-repeat; width: 980px; height: 81px;}
.fw_bg_body { width: 980px; text-align: left; }
.fw_footer { color: #003060; width: 980px; height: 44px; text-align: right; font-size: 13px; margin-top: 10px;}
#sub_menu_head {
font-size: 13px;
margin-right:5px;
}
#sub_menu_head span{
vertical-align:middle;
}
#sub_menu_head a{
vertical-align:top;
}
#sub_menu_head a{
margin-left:16px;
}
#sub_menu_head img{
margin-right:5px;
}
table { border-collapse: collapse; }
.fs10 { font-size: 13px;}
.fs9 { font-size: 12px;}
.pTitel, .pTitelo
{ font-weight: bold; text-align: center; background-color: #E1F4FF; padding: 5px 10px; border: 1px solid #C6C7BF; }
.pDialog, .pDialogo, .pDialogb, .pDialogob
{ padding: 10px 10px; text-align: left; background-color: #FBFAF7; border: 1px solid #C6C7BF; }
.pButtonbar { text-align: right; padding: 5px 10px; background-color: #E1F4FF; border: 1px solid #C6C7BF; }
.pDialog, .pDialogo, .pTitelo, .pButtonbar
{ border-top: 0px;}
@media print {
#Menuspalte { width: 2px; padding: 0px; vertical-align: top; display:none;}
#TopMenuSpalte {display:none; }
}
@media screen {
#TopMenuSpalte { }
#Menuspalte { width: 190px; padding: 0px; vertical-align: top; }
}
#Dataspalte { width: 787px; height: 400px; vertical-align: top; padding: 0px; }
#menucontent { width: 167px; }
#Menuhead { width: 190px; padding: 0px; vertical-align: top; }
#Datahead { width: 787px; padding: 0px;}
#menucontent span {
display:none;
}
#menucontent ul {
background-color: transparent;
margin:0;
border: 0;
padding: 0;
margin:-20px 1px 0px;
padding-top: 0px;
list-style-type: none;
position:relative;
z-index:5;
}
#menucontent .small_bar_back_head ul {
margin:0;
}
#MainWizardhead ul li,
#MainNashead ul li{
padding: 6px 0 0 1px;
}
#menucontent ul li ul {
background-color: #faf8f2;
margin: 0px;
padding: 0px 8px 0px 0px;
margin: 3px 0px -3px -10px;
}
#menucontent li {
font-size: 14px;
font-weight:bold;
padding: 3px 8px 3px 11px;
white-space: nowrap;
}
#menucontent ul li ul li {
font-size: 13px;
font-weight:normal;
padding-right: 0px;
line-height: 16px;
}
#menucontent li.selected ul li a,
#menucontent li a {
color: #003060;
text-decoration: none;
}
#menucontent li a:hover {
text-decoration: underline;
}
#menucontent li.selected {
background-color:none;
background-image: url("/css/default/images/menue_selected.gif");
background-position: top center;
background-repeat: no-repeat;
padding: 3px 8px 3px 11px;
}
#menucontent ul li ul li.selected {
background-color:none;
background-image: url("/css/default/images/menue_selected.gif");
background-position: left;
background-repeat: no-repeat;
position:relative;
padding-left:20px;
left:-8px;
width:130px;
}
#menucontent li.selected ul li.selected a,
#menucontent li.selected a {
color:#003060;
text-decoration: none;
}
#menucontent li.selected ul li.selected a:hover,
#menucontent li.selected a:hover {
text-decoration: underline;
}
#menucontent li.submenu_last ,
#menucontent li.submenu {
margin:0;
background-image: none;
/*
background-image: url("/css/default/images/menue_selected_toplevel.gif");
background-position: left top;
background-repeat: repeat-x;
background-color: none;
border-bottom:#b7d9f6 1px solid;
border-top:#b7d9f6 1px solid;
*/
}
#menucontent li.submenu_last {
border-bottom:0px;
}
#menucontent li.submenu_last ul,
#menucontent li.submenu ul {
background-color: #faf8f2;
padding:0;
margin:0;
margin-top:7px;
}
#menucontent li.submenu_last.open,
#menucontent li.submenu.open {
background-color: #003060;
background-image: none;
background-position: top center;
}
#menucontent li.separator {
margin-left: 10px;
padding: 10px 0 7px 0;
font-size: 0;
}
#menucontent li.separator div {
border-top: 1px dotted #003060;
margin: 0 10px;
}
#menucontent li.explain {
font-size:11px;
font-weight:normal;
color: #808078;
}
.LMenudis { position: relative; top: 5px; left: 40px; color: #999999; zoom:1;}
.Iconbutton { width: 30px; }
.Pushbutton { width:100px;}
.Pushbuttonfett
{ font-weight:bold; width:100px; }
.PushbuttonBig { width:auto;}
.PushbuttonBigfett
{ font-weight:bold; width:auto; }
.b5 { padding-bottom: 5px; }
.b10 { padding-bottom: 10px; }
.mb5 { margin-bottom: 5px; }
.mb10 { margin-bottom: 10px; }
.mb20 { margin-bottom: 20px; }
.mt5 {margin-top: 5px;}
.mt10 { margin-top: 10px; }
.mt20 { margin-top: 20px; }
.mt30 { margin-top: 30px; }
.ml10 { margin-left: 10px; }
.ml15 { margin-left: 15px; }
.ml20 { margin-left: 20px; }
.ml25 { margin-left: 25px; }
.ml30 { margin-left: 30px; }
.fett { font-weight:bold; }
.ac {text-align:center;}
.ar {text-align:right;}
.al {text-align: left;}
.errorMessage { font-family: Arial, Helvetica, sans-serif; font-size: 13px; font-weight: bold; color: #CC0000; text-align: center;
margin: 5px; padding: 2px; background-color: white; }
.Dialogtitel { font-weight: bold; }
.Dialoglabel { }
.Dialoglabelfett
{ font-weight: bold; }
.DialogFehler { font-weight: bold; color: #CC0000; }
.Dialogtext { }
.Dialoglist { color: black; background-color: #FFFFFF }
.Minititel { font-size: 12px; }
.Minilabel { font-size: 12px; }
.Minitext { font-size: 12px; background-color: #FFFFFF }
.Eingabefeld { }
.Hell { background-color: #FFFFFF; }
h1, h2, h3, h4, h5, h6
{ font-size: 14px; font-weight: bold; }
.tMinihell { height: 12px; font-size: 12px; background-color:#FFFFFF; }
.tMinidunkel { height: 12px; font-size: 12px; }
.tMinigrau { height: 12px; font-size: 12px; background-color:#F8F8F8; }
.tborder { background-color:#FFFFFF; border: 1px solid #C6C7BE; }
.tborder th { background-color:#F8F8F8;}
.rundlt { background: url("/html/de/images/_brd_lt_thin.gif") top left no-repeat; }
.rundrt { background: url("/html/de/images/_brd_rt_thin.gif") top right no-repeat; }
.rundlb {}
.rundrb {}
.ecklm {}
.eckrm {}
.ecklb {}
.eckrb {}
.backsubtitel,
.backtitel { background: url(/css/default/images/contentbereich_titel_1px.gif) repeat-x 0 -2px; height:28px;margin: 0px; padding: 0px; clear:left; }
.backtitel2 {background: url(/css/default/images/contentbereich_titel_1px.gif) repeat-x 0 0; height:28px; margin: 0px; padding: 0px; clear:left; }
.backtitel2 {
border-left:1px solid #90a6a5;
border-right:1px solid #90a6a5;
}
.backsubtitel {
border-left:1px solid #90a6a5;
border-right:1px solid #90a6a5;
height:26px;
}
.backdialog {
background-color: #fbfaf7;
margin: 0px;
padding: 0px;
border-left:1px solid #90a6a5;
border-right:1px solid #90a6a5;
clear:left; }
.backdialog a:link { text-decoration: underline; }
.backdialog a:visited { text-decoration: underline; }
.backdialog a:active { text-decoration: underline; }
.backdialog a:hover { text-decoration: underline; }
.backdialog li a:link { text-decoration: none; }
.backdialog li a:visited { text-decoration: none; }
.backdialog li a:active { text-decoration: underline; }
.backdialog li a:hover { text-decoration: underline; }
.small_bar_left_head,
.menu_bar_left_head{
background-image: url("/css/default/images/menueschablone_oben_links.gif");
background-repeat: no-repeat;
width: 14px;
height: 24px;
margin: 0;
padding: 0;
border: 0;
float: left;
}
.small_bar_right_head,
.menu_bar_right_head{
background-image: url("/css/default/images/menueschablone_oben_rechts.gif");
background-repeat: no-repeat;
height: 24px;
width: 24px;
float: right;
}
.small_bar_back_head,
.menu_bar_back_head {
height: 24px;
background-image: url("/css/default/images/menueschablone_oben_1px.gif");
background-repeat: repeat;
margin:0 13px;
}
.page_left_bottom,
.small_bar_left_bottom,
.menu_bar_left_bottom{
background-image: url("/css/default/images/menueschablone_unten_links.gif");
background-repeat: no-repeat;
height: 28px;
width: 24px;
margin: 0;
padding: 0;
border: 0;
float: left;
}
.menu_bar_left_bottom{
top:-5px;
}
.page_right_bottom,
.small_bar_right_bottom,
.menu_bar_right_bottom{
background-image: url("/css/default/images/menueschablone_unten_rechts.gif");
background-repeat: no-repeat;
height: 28px;
width: 24px;
float: right;
}
.menu_bar_right_bottom{
top:-5px;
}
.page_back_bottom,
.small_bar_back_bottom,
.menu_bar_back_bottom {
height: 28px;
background-image: url("/css/default/images/menueschablone_unten_1px.gif");
background-repeat: repeat;
margin:0 15px;
margin-bottom: 15px;
}
.menu_bar_back_bottom {
top:-5px;
}
.page_left_bottom{
background-image: url("/css/default/images/content_unten_links.gif");
height:12px;
}
.page_right_bottom{
background-image: url("/css/default/images/content_unten_rechts.gif");
height:12px;
}
.page_back_bottom {
background-image: url("/css/default/images/content_unten_1px.gif");
height:12px;
margin-bottom: 0px;
margin:0 15px;
}
.menu_header.small {
background-image: url("/css/default/images/menueschablone_oben_1px.gif");
height: 13px;
}
.menu_footer {
height: 13px;
background-image: url("/css/default/images/menueschablone_unten_1px.gif");
margin-bottom: 15px;
}
.menu_body_outer {
width: 165px;
border: 1px solid #90a6a5;
border-top: 0px;
border-bottom: 0px;
padding-top:1px;
background-color:#faf8f2;
}
.backtitelkonfig
{ background-image: url(/css/default/images/contentbereich_titel_1px.gif); height:28px; margin: 0px; padding: 0px; clear:left; }
.backtitelstatus
{ background-image: url(/css/default/images/contentbereich_titel_1px.gif); height:28px; margin: 0px; padding: 0px; clear:left;
/*background-color: #e1f4ff; margin: 0px; padding: 0px; clear:left; */
}
.backframe {
background-color: #faf8f2;
margin: 0px;
padding: 0px;
border-left:1px solid #90a6a5;
border-right:1px solid #90a6a5;
clear:left; }
.backfolder { background-color: #fbfaf7; margin: 0px; padding: 0px; border-top: 1px solid #c6c7be; }
.foretitel { font-weight: bold; font-size: 15px; padding: 5px 12px;}
.backframe .foretitel { font-weight: bold; font-size: 15px; padding: 5px 12px;}
.foredialog { padding: 10px; }
.forebuttons {
text-align: right;
padding: 7px 10px;
border-top: 1px solid #90A6A5;
}
#content {width: 787px; margin: 0px; clear:both; font-size: 13px; }
#contenthead {width: 787px; margin: 0px;}
/* Tabs beginn *********************************/
ul.tabs {
float: left;
width: 779px;
background: url("/css/default/images/reiterkarte_top_1px.gif") repeat-x left bottom;
padding-bottom: 0px;
padding-left: 5px;
list-style-type: none;
margin-top: 0;
margin-left: -9px;
}
ul.tabs li {
float: left;
margin-left: 5px;
background: url("/css/default/images/reiter_inaktiv_rechts.gif") no-repeat right bottom;
}
ul.tabs li a,ul.tabs li div {
padding: 5px 15px;
background: url("/css/default/images/reiter_inaktiv_links.gif") no-repeat left bottom;
display: block;
height: 17px;
}
ul.tabs li.tabs_on {
background-image: url("/css/default/images/reiter_aktiv_rechts.gif");
font-weight:bold;
}
ul.tabs li.tabs_on div {
color: #000000;
background-image: url("/css/default/images/reiter_aktiv_links.gif");
}
/* Tabs ENDE ********************************************************/
.backframe .backdialog {
border-left:0px;
border-right:0px;
}
.backframe .backdialog .ecklm { background: none}
.backframe .backdialog .eckrm { background: none}
.backframe .backdialog .ecklb { background: none}
.backframe .backdialog .eckrb { background: none}
.backframe .backdialog .rundlb { background: none}
.backframe .backdialog .rundrb { background: none}
.backframe .backdialog .foredialog { padding: 5px 0px; border-bottom:1px solid #90a6a5;}
.bcWeiss { background-color:#FFFFFF; }
.bcGrau { background-color:#F8F8F8; }
#ansichten {text-align:right; margin:5px 30px 10px 0px; font-weight:bold; }
.ansicht {padding: 3px 10px; border: 1px solid #C6C7BF; cursor:pointer;}
.rundes {text-align:right; margin:0px 30px 0px 0px; }
.rundes li {list-style:none; float:right;background: url("/html/de/images/_brd_right.gif") right top no-repeat; margin: 0 0px 10px 15px; height: 26px; }
.rundes a {display:block; background: url("/html/de/images/_brd_left.gif") left top no-repeat; padding: 5px 15px 5px 15px; font-weight: bold; height: 26px; text-align:center;cursor:pointer;}
.rundes .setup {background-color: #f5ebb2;}
.rundes .view {background-color: #cce4f1;}
.rundes a:link, .rundes a:visited
{ color: #003060; text-decoration: none; }
.rundes a:hover, .rundes a:active
{ text-decoration: underline; }
.rund-links { background: url("/html/de/images/_brd_left.gif") no-repeat;
height:26px; width:10px;}
.rund-rechts { background: url("/html/de/images/_brd_right.gif") right no-repeat;
height:26px; margin-top:-26px; margin-left:10px;
text-align:center; }
.rund-rechts p { padding-top:5px; padding-right:10px;
font-weight: bold; white-space:nowrap; }
.gelb { background-color: #fff1b1; }
.blau { background-color: #e1f4ff;; }
.notetext {color: #000000;padding-top:10px;padding-bottom:10px;}
.CssPinInput {
margin-left:5px;
margin-right:5px;}
.ViewImage {
max-width: 160px;
max-height: 160px;
width: expression(this.width > 160 ? "160px" : true);
height: expression(this.height > 160 ? "160px" : true);
}
.menu_header,
.menu_footer {
width: 100%;
text-align: left;
font-size: 14px;
padding: 0;
border: 0;
margin: auto;
/*background-repeat: repeat;*/
}
.menu_header {
/*width: 167px;*/
height: 28px;
background-image: url(/css/default/images/menueschablone_kopf.gif);
background-repeat: no-repeat;
}
.menu_header.small {
background-image: url(/css/default/images/menueschablone_andere_kopf.gif);
background-repeat: no-repeat;
height: 13px;
}
.menu_footer {
/*width: 167px;*/
height: 13px;
background-image: url(/css/default/images/menueschablone_boden.gif );
background-repeat: no-repeat;
margin-bottom: 15px;
}
.menu_body_outer_old {
width: 165px;
border: 1px solid #208ede;
border-top: 0px;
border-bottom: 0px;
background-image: url(/css/default/images/menu_left.gif);
background-repeat: repeat-y;
}
.menu_body_inner {
background-image: url(/css/default/images/menu_right.gif);
background-repeat: repeat-y;
background-position: right;
}
div.provider_select {
overflow:hidden;
}
div.provider_select p {
float:left;
height:50px;
}
.gray {
background-color:#EEEEEE;
}
.globe_green, .globe_gray, .globe_online {
background-image: url("/css/default/images/globe_green.gif");
background-repeat: no-repeat;
background-position:center center;
height: 16px;
width: 16px;
border: 0px;
padding: 0px;
margin: 0px;
}
.globe_gray {
background-image: url("/css/default/images/globe_gray.gif");
}
.globe_online {
background-image: url("/css/default/images/globe.gif");
}
.led_green {
background-image: url("/css/default/images/led_green.gif");
background-repeat: no-repeat;
background-position:center center;
height: 16px;
width: 16px;
border: 0px;
padding: 0px;
margin: 0px;
}
hr,
.page_sub_headline {
width: auto;
border: 0px;
height: 1px;
margin-top: 10px;
margin-bottom: 10px;
}
hr {
width: 100%;
color: #90a6a5;
background-color: #90a6a5;
}
 
</style> 
<!--[if IE 7]>
<style type="text/css">
#menucontent li.submenu ul{
margin-top:5px;
padding-bottom:1px;
}
 
</style>
<![endif]--> 
<!--[if gte IE 6]>
<style type="text/css">
.ie_b10 { padding-bottom: 1px; }
</style>
<![endif]--> 
<!--[if IE 6]>
<style type="text/css">
div.foredialog p { zoom:1; }
</style>
<![endif]--> 
<!--[if IE 7]>
<style type="text/css">
.ie_b10minus{margin-bottom:-10px;}
</style>
<![endif]--> 
<script type="text/javascript"> 
var g_CurTimeObj = new Date();
var g_StartTime = g_CurTimeObj.getTime();
var g_StopTimeWrite=false;
// ../js/webuicookie.js
var g_webuiCookie = g_webuiCookie || (function () {
var fields = [
{ valName: "noPwdReminder", valDefault: "0"} // Keine Anzeige des "Passworteinrichten"-Reminders
];
var values;
function init(str) {
str = str || "";
values = str.split("");
for (var i = values.length; i < fields.length; i++) {
values[i] = fields[i].valDefault;
}
}
function idx(valName) {
for (var i = 0, len = fields.length; i < len; i++) {
if (fields[i] && fields[i].valName == valName) {
return i;
}
}
return -1;
}
function getChar(valName) {
if (values) {
var i = idx(valName);
if (i >= 0) {
return values[i];
}
}
return "";
}
function setChar(valName, ch) {
if (values) {
ch = ""+ch;
if (ch.length != 1) {
return false;
}
var i = idx(valName);
if (i >= 0) {
values[i] = ch;
return true;
}
}
return false;
}
function getWholeStr() {
if (!values) {
return "";
}
return values.join("");
}
function saveToForm(dontEnable) {
if (!values) {
return false;
}
var frm = document.forms["uiPostForm"];
if (!frm) {
return false;
}
frm = frm.elements["box:settings/webui_cookie"];
if (!frm) {
return false;
}
frm.value = getWholeStr();
if (!dontEnable) {
frm.disabled = false;
}
return true;
}
return {
init: init,
getChar: getChar,
setChar: setChar,
saveToForm: saveToForm
};
})();
 
g_webuiCookie.init("");
</script> 
<script type="text/javascript"> 
g_IE = false;
g_IE6 = false;
</script> 
<!--[if IE]>
<script type="text/javascript">
g_IE = true;
</script>
<![endif]--> 
<!--[if lt IE 7]>
<script type="text/javascript">
g_IE6 = true;
</script>
<![endif]--> 
<script type="text/javascript"> 
function jslFormSetPost(name) {
var frm = document.forms[name];
if (frm) {
frm.method = "POST";
}
}
function jslFormSetGet(name) {
var frm = document.forms[name];
if (frm) {
frm.method = "GET";
}
}
function jslFormSubmit(name) {
UpdateDateTime();
var frm = document.forms[name];
if (frm) {
frm.submit();
}
}
function goToLuaPage(page) {
page += "?sid=3a8ef4a34cfcf8a7";
location.href = page;
}
var avm5 = {
"home": {
"sitemap": "/menus/sitemap.lua",
"home": "/home/home.lua"
},
"internet": {
"sitemap": "/menus/sitemap.lua"
,"userlist": "/internet/kids.lua"
},
"fon": {
"sitemap": "/menus/sitemap.lua"
},
"net": {
"sitemap": "/menus/sitemap.lua",
"newdevice": "/net/newdevice.lua",
"boxnet": "/net/boxnet.lua",
"einstellungen": "/storage/settings.lua"
},
"wlan": {
"sitemap": "/menus/sitemap.lua",
"guest_access": "/wlan/guest_access.lua"
},
"dect": {
"sitemap": "/menus/sitemap.lua"
},
"system": {
"sitemap": "/menus/sitemap.lua",
"syslog": "/system/syslog.lua",
"energy": "/system/energy.lua",
"email": "/system/push.lua",
"infoled": "/system/infoled.lua",
"user": "/system/kennwort.lua",
"imexport": "/system/export.lua",
"update": "/system/update.lua",
"update_OnClick_1": "/system/update.lua",
"extended": "/system/expert.lua",
"reset": "/system/reboot.lua",
"nacht": "/system/wlan_night.lua",
"ring_block": "/system/ring_block.lua"
},
"konfig": {
"sitemap": "/menus/sitemap.lua"
//"home": "/assis/home.lua"
},
"software": {
"sitemap": "/menus/sitemap.lua"
}
};
function checkAvm5(menu, page) {
menu = menu || jslGetValue("uiPostMenu");
page = page || jslGetValue("uiPostPageName");
var luaPage = avm5[menu] ? avm5[menu][page] : "";
if (luaPage) {
goToLuaPage(luaPage);
return true;
}
return false;
}
function jslGoTo(Menu,Page) {
if (!checkAvm5(Menu, Page)) {
if ((Menu!=null) && (Menu!="")) jslSetValue("uiPostMenu", Menu);
if ((Page!=null) && (Page!="")) {
jslSetValue("uiPostPageName", Page);
jslSetValue("uiPostErrorPageName", Page);
}
// Spezialbehandlung Netzwerkseite
jslFormSetGet("uiPostForm");
jslFormSubmit("uiPostForm");
}
}
function UpdateDateTime() {
var date = new Date();
jslSetValue("uiPostDateTime", Math.floor(date.getTime()/1000) + "," + date.getTimezoneOffset());
}
function jslGetValue (id) {
if (navigator.appName=='Microsoft Pocket Internet Explorer') {
return eval('document.uiPostForm.'+id+'.value');
} else {
var h = document.getElementById(id);
if (h != null) return h.value;
}
return "";
}
function jslSetValue(id, wert) {
if (navigator.appName=='Microsoft Pocket Internet Explorer') {
eval('document.uiPostForm.'+id+'.value="'+wert+'"');
} else {
var h1 = document.getElementById(id);
if (h1 != null) h1.value=wert;
}
}
function jslPopHelp(pagename) {
jslPopHelpEx(pagename, "");
}
function jslPopHelpEx(pagename, anker) {
var uri = "/help/help.lua?helppage=" + pagename + ".html&hide=yes";
uri += "&sid=3a8ef4a34cfcf8a7";
var options = "width=580,height=500,resizable=yes,scrollbars=yes,location=no";
if (top.g_HelpWin==null || typeof(top.g_HelpWin.closed)=='undefined' || top.g_HelpWin.closed)
top.g_HelpWin = window.open(uri,"HelpWindow",options);
else
top.g_HelpWin.location.href = uri;
if (top.g_HelpWin) top.g_HelpWin.focus();
}
function isLotse(menu, page) {
if (menu == "home") return false;
if (menu == "konfig" && (page != "home" && page != "sitemap")) return true;
if (menu == "first" || menu == "fon_config") return true;
if (menu == "tr69_autoconfig") return true;
return false;
}
var g_AskAssiText = "Wenn Sie den Assistenten jetzt beenden, gehen Ihre Eingaben verloren.\x0aWählen Sie OK, um den Assistenten zu beenden.\x0aWählen Sie Abbrechen, um zum Assistenten zurückzukehren.";
function AskAssiCancel() {
return confirm(g_AskAssiText);
}
function OnOverview() {
var m = jslGetValue("uiPostMenu");
var p = jslGetValue("uiPostPageName");
if (isLotse(m,p)) {
if (!AskAssiCancel()) return;
}
jslGoTo("home", "home");
}
function OnSetting() {
var m = jslGetValue("uiPostMenu");
var p = jslGetValue("uiPostPageName");
if (isLotse(m,p)) {
if (!AskAssiCancel()) return;
}
var menu = readCookie("menu");
var page = readCookie("page");
if (menu == "konfig") {
jslGoTo("konfig", "home");
}
else if (menu == "software") {
jslGoTo("software", "extern");
}
else if (menu == "enhsettings") {
jslGoTo("enhsettings", "enhsettings");
}
else {
jslGoTo("konfig", "home");
}
}
function GoToSitemap()
{
var m = jslGetValue("uiPostMenu");
var p = jslGetValue("uiPostPageName");
if (isLotse(m,p)) {
if (AskAssiCancel()) {
jslGoTo("konfig","sitemap");
}
return;
}
jslGoTo("","sitemap");
}
function AddFavoritesLink(breite, titel) {
if (g_IE)
document.write('<td title="' + titel + '" style="width:' + breite + 'px;"><a href="javascript:window.external.AddFavorite(window.document.URL,window.document.title)"><img src="../html/de/images/favorite.gif"></a></td>');
}
function setMenuPageCookie(menu, page) {
storeCookie("menu",menu,100);
storeCookie("page",page,100);
}
function convertHTML2Text(str) {
if (str) {
str = str.replace(/</g,"&lt;");
str = str.replace(/>/g,"&gt;");
var tst = document.createElement('div');
tst.innerHTML = str;
str = tst.innerText || tst.textContent;
}
return str;
}
//#if 0
//*****************************************************************************
// Alphabetisches Sortieren eines Arrays nach Sprache.
// Rückgabe: der sortierte Array
// Parameter:
// - array: der zu sortierende Array
// - getStrFunc: eine Funktion, die Elementen des Arrays einen String zuordnet.
// Wenn getStrFunc keine Funktion ist, wird angenommen, dass
// es sich um einen Array von Strings handelt.
// - lang: die Sprache 'de', 'en', 'fr', 'it' oder 'es', default ist var:lang.
// - makeCopy: optional, wenn true wird eine Kopie des Arrays angelegt und diese sortiert.
//******************************************************************************
//#endif
function sortByStrings(array, getStrFunc, lang, makeCopy) {
lang = lang || 'de';
if (typeof getStrFunc != 'function') {
getStrFunc = function (str) { return str; };
}
var toSort = array;
if (makeCopy) {
for (var i = 0, len = array.length; i < len; i++) {
toSort[i] = array[i];
}
}
toSort.sort(makeStrCompareFunc(lang, getStrFunc));
return toSort;
}
//#if 0
//********************************************************************************************************
// - makeStrCompareFunc gibt eine Funktion zurück, die zwei Objekte bzgl. eines Strings alphabetisch
// je nach 'lang' vergleicht. Hilfsfunktion für sortByStrings.
//********************************************************************************************************
//#endif
function makeStrCompareFunc(lang, getStrFunc) {
var abc = {
de: "AaÄäBbCcDdEeFfGgHhIiJjKkLlMmNnOoÖöPpQqRrSsßTtUuÜüVvWwXxYyZz",
en: "AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz",
fr: "AaÀàÂâBbCcÇçDdEeÉéÉéÊêËëFfGgHhIiÎîÏïJjKkLlMmNnOoÔôŒœPpQqRrSsTtUuÙùÛûÜüVvWwXxYyŸÿZz",
it: "AaÀàBbCcDdEeÈèÉéFfGgHhIiÎîÏïJjKkLlMmNnOoÒòÓóPpQqRrSsTtUuÙùVvWwXxYyZz",
es: "AaÁáBbCcDdEeÉéFfGgHhIiÍíJjKkLlMmNnÑñOoÓóPpQqRrSsTtUuÚúÜüVvWwXxYyZz"
};
var currAbc = abc[lang] || [];
function compare(str1, str2) {
var len = Math.min(str1.length, str2.length);
var i = 0;
var c = 0;
var i1,i2;
while (i < len && c == 0) {
i1 = currAbc.indexOf(str1[i]);
i2 = currAbc.indexOf(str2[i]);
if (i1 < 0 || i2 < 0) {
i1 = str1.charCodeAt(i);
i2 = str2.charCodeAt(i);
}
c = i1 - i2;
i += 1;
}
if (i < len) {
return c;
}
else {
return str1.length - str2.length;
}
}
//#if 0
//****************************************************
// Das ist die CompareFunktion, die zurückgegeben wird.
//****************************************************
//#endif
return function (obj1, obj2) {
var str1 = convertHTML2Text(getStrFunc(obj1) || "");
var str2 = convertHTML2Text(getStrFunc(obj2) || "");
return compare(str1, str2);
};
}
function isBitSet(num, b) {
return (num & (1 << b)) > 0;
}
function doLogout() {
var frm = document.forms["logoutForm"];
if (frm) {
return frm.submit();
}
return false;
}
function isLoginPage(txt) {
if (txt) {
if (txt.indexOf("<!--login" + "Page-->") >= 0) {
return true;
}
}
return false;
}
function showtip(current,e,text){
if (!e)
return;
var tipObj=document.getElementById("uiTooltip");
if (tipObj)
{
tipObj.innerHTML=text;
tipObj.style.left=(e.pageX?e.pageX:e.clientX)+5+"px";
tipObj.style.top=(e.pageY?e.pageY:e.clientY)+5+"px";
tipObj.style.display="";
}
return;
}
function hidetip(){
var tipObj=document.getElementById("uiTooltip");
if (tipObj)
tipObj.style.display="none";
return;
}
var g_ImgPath = '../html/de/images/';
function IconBtn(btnId, clickFunc, btnValue, pic, invisible)
{
var str = '<button type="button" id="' + btnId + '"';
if (clickFunc) str += ' onclick="' + clickFunc + '"';
if (btnValue) str += ' value="' + btnValue + '" title="' + btnValue + '"';
if (invisible) str += ' style="visibility:hidden;"';
str += '>';
str += '<img src="' + g_ImgPath + pic + '" /></button>';
return str;
}
function storeCookie(name, value, days) {
var expires = "";
if (days) {
var date = new Date();
date.setTime(date.getTime()+(days*24*60*60*1000));
expires = "; expires="+date.toGMTString();
}
document.cookie = name+"="+value+expires+"; path=/";
}
function readCookie(name) {
var result = "";
var cookieStr = document.cookie;
if (cookieStr) {
var start = cookieStr.indexOf(name + '=');
if (start > -1) {
start += name.length + 1;
var end = cookieStr.indexOf(';', start);
if (end == -1) {
end = cookieStr.length;
}
result = cookieStr.substring(start, end);
}
}
return result;
}
function eraseCookie(name) {
storeCookie(name, "", -1);
}
function setBackCookie(cookieName) {
var frm = document.forms["uiPostForm"];
if (!frm) { return; }
var values = [];
var inputs = frm.elements;
for (var i = 0, len = inputs.length; i < len; i++) {
var varName = inputs[i].name;
if (varName.indexOf(":") == -1 || varName.indexOf("var:") == 0) {
values.push(varName + "=" + inputs[i].value);
}
}
storeCookie(cookieName, values.join("&"), 1);
}
function htmlStringBuilder() {
// HTML-Tags, die kein Endtag benötigen
var standalone = {
'input': true, 'img': true, 'hr': true, 'br': true, 'col': true, 'area': true, 'link': true,
'frame': true, 'meta': true, 'base': true, 'basefont': true, 'isindex': true, 'param': true
};
function getEndTag(tagName) {
return standalone[tagName] ? "" : ("<\/" + tagName + ">");
}
function buildAttributes(attributes) {
var str = "";
for (name in attributes) {
str += " " + name.toLowerCase();
var value = attributes[name];
str += value ? ("=\"" + value + "\"") : "";
}
return str;
}
function addAttribute(attributes, name, value) {
if (name) {
attributes[name] = (value || "");
}
}
function addContent(tag, tagOrText) {
if (typeof tagOrText == 'string') {
tag.content += tagOrText;
}
else if (tagOrText) {
tag.content += tagOrText.build();
}
}
function buildTag(tag, tagName, attributes) {
return tag.start + buildAttributes(attributes) + tag.content + getEndTag(tagName);
}
// Die Tagfunktion
return function (tagName, objAttributes, content) {
// Initialisierung
tagName = tagName.toLowerCase();
var tag = {
start: "<" + tagName,
content: ">"
};
var attributes = {};
if (objAttributes) {
for (var n in objAttributes) {
if (objAttributes.hasOwnProperty(n)) {
addAttribute(attributes, n, objAttributes[n]);
}
}
}
if (content) {
addContent(tag, content);
}
// Interface
return {
add: function (tagOrText) { addContent(tag, tagOrText); },
attr: function (name, value) { addAttribute(attributes, name, value); },
build: function () { return buildTag(tag, tagName, attributes); },
reset: function () { tag.content = ">"; attributes = {}; }
};
};
}
function toArray(arrayLike) {
var array = [];
for (var i = 0, len = arrayLike.length; i < len; i++) {
array[i] = arrayLike[i];
}
return array;
}
</script> 
 
<script type="text/javascript"> 
storeCookie("currmenu","fon");
</script> 
<!-- ../fon/foncalls.js --> 
<!--[if IE 7]>
<style type="text/css">
.ie_foncall { margin-top: -10px; }
</style>
<![endif]--> 
<style type="text/css"> 
<!--
#tClient {height: 12px; font-size: 12px; width: 700px; table-layout: fixed}
#tClient td {padding: 2px; overflow: hidden; height: 24px;}
#tClient th {padding: 2px; vertical-align:top; background-color:#EEEEEE} /* overflow: hidden;}*/
#tClient .c1 {text-align: left; width:20px;}
#tClient .c3 {text-align: left; width:90px;}
#tClient .c4 {text-align: left; width:70px;}
#tClient .c5 {text-align: left; padding-left:10px; }
#tClient .c6 {text-align: center;width:45px;}
#tClient .c6a {text-align: center; width:45px;}
#tClient .c7 {text-align: left; padding-left: 10px; width:132px;}
#tClient .c8 {text-align: left; width:180px;}
#tClient .c9 {text-align: center; width: 36px;}
#tLegende {margin:auto}
#tLegende td {padding: 2px 2px;}
#tClient a:link, #tClient a:visited { color: #003366; text-decoration: none;}
#tClient a:hover, #tClient a:active { color: #0066cc; text-decoration: underline;}
#ml2 { margin-left: 2px; }
#tClient.Failed .failed {display:none }
#tClient.Out .out {display:none }
#tClient.In .in {display:none }
#tClient.ShowAllType {display:table }
/* Tabs beginn *********************************/
ul.foncalltabs {
float: left;
width: 779px;
background: url("/css/default/images/reiterkarte_top_1px.gif") repeat-x left bottom;
padding-bottom: 0px;
padding-left: 5px;
list-style-type: none;
margin-top: 0;
margin-left: -9px;
}
ul.foncalltabs li {
float: left;
margin-left: 5px;
background: url("/css/default/images/reiter_inaktiv_rechts.gif") no-repeat right bottom;
}
ul.foncalltabs li a,ul.foncalltabs li div {
padding: 5px 15px;
background: url("/css/default/images/reiter_inaktiv_links.gif") no-repeat left bottom;
display: block;
height: 17px;
}
ul.foncalltabs li.tabs_on {
background-image: url("/css/default/images/reiter_aktiv_rechts.gif");
}
ul.foncalltabs li.tabs_on div {
color: #000000;
background-image: url("/css/default/images/reiter_aktiv_links.gif");
}
ul.foncalltabs li a img, ul.foncalltabs li div img {
float:left;
}
.backframe .backdialog .foredialog { padding: 10px 0px; border-bottom:0px}
.xfoncalltabs { float: left; width: 100%; height:27px; background: url("../html/de/images/_beck_bm_thin.gif") bottom left repeat-x; }
.xfoncalltabs li { list-style:none; float:left; height:26px; background: #edede5 url("../html/de/images/_brd_rt_thin.gif") right top no-repeat; margin: 0 2px 0 0;}
.xfoncalltabs a { display:block; height: 21px; background: url("../html/de/images/_brd_lt_thin.gif") left top no-repeat; padding: 3px 15px; }
.xfoncalltabs .tabs_on { background-color: #fbfaf7; height:26px; border-bottom: 1px solid #fbfaf7; font-weight: bold; }
.xfoncalltabs .tabs_on .activtab {display:block; height: 21px; background: url("../html/de/images/_brd_lt_thin.gif") left top no-repeat; padding: 3px 15px; color: #000000; text-decoration: none; }
.foncallforedialog {
padding: 10px;}
/* star html hack fuer IE */
* html .foncallforedialog {
padding-left: 0px; padding-top:10px; padding-bottom:10px; margin-top:-10px;}
* html .showFoncalls { margin-left:10px;}
* html .iepr7 {
padding-right: 7px;}
* html .foredialog {padding-right:9px; padding-left:10px; padding-top:10px; padding-bottom:10px;}
-->
</style> 
<script type=text/javascript> 
// ../js/jsl.js
function doLoadPage(id,page) {
var handle = document.getElementById(id);
if (handle!=null) handle.src=page;
}
function jslIsString(id) {
if (document.getElementById(id).value.match("[a-zA-Z0-9_]+")!=null) return true;
return false;
}
function jslDoEliminateBlanks(text) {
var newText = text;
while ( newText.indexOf( " ") != (-1)) {
newText = newText.replace(/ /,"");
}
return newText;
}
function jslGetName (id) {
var h = document.getElementById(id);
if (h != null) return h.name;
return "";
}
function jslSetName(id, wert) {
var h1 = document.getElementById(id);
if (h1 != null) h1.name=wert;
}
function jslCopyValue(id_to, id_from) {
if (navigator.appName=='Microsoft Pocket Internet Explorer') {
eval('document.uiPostForm.'+id_to+'.value = document.uiViewForm.'+id_from+'.value');
} else {
var h1 = document.getElementById(id_to);
var h2 = document.getElementById(id_from);
if (h1 != null && h2 != null) h1.value=h2.value;
}
}
function jslGetChecked (id) {
if (navigator.appName=='Microsoft Pocket Internet Explorer') {
return eval('document.uiViewForm.'+id+'.checked');
} else {
var h = document.getElementById(id);
if (h != null) return h.checked;
}
return false;
}
function jslSetChecked (id, wert) {
if (navigator.appName=='Microsoft Pocket Internet Explorer') {
eval('document.uiViewForm.'+id+'.checked = '+wert);
} else {
var h1 = document.getElementById(id);
if (h1 != null) h1.checked = wert;
}
}
function jslSetCheckValue (to, from) {
var h1 = document.getElementById(to);
var h2 = document.getElementById(from);
if (h1 == null || h2 == null) {
return;
}
if (h2.checked) {
h1.value = "1";
} else {
h1.value = "0";
}
}
function jslGetCheckValue (to, from) {
var h1 = document.getElementById(to);
var h2 = document.getElementById(from);
if (h1 == null || h2 == null) {
return;
}
h1.checked = (h2.value != "0");
}
function jslGrayLabels(elem,color) {
var p = elem.parentNode;
if (p) p = p.parentNode;
p = p || document;
if (p) {
var labels = p.getElementsByTagName('label');
for (var i = 0, len = labels.length; i < len; i++) {
if (labels[i].htmlFor == elem.id) {
labels[i].style.color = color;
}
}
}
}
function jslDisable(id) {
var h1 = document.getElementById(id);
if (h1 != null)
{
h1.disabled=true;
jslGrayLabels(h1,"#999999");
}
}
function jslEnable(id) {
if (navigator.appName=='Microsoft Pocket Internet Explorer') {
eval('document.uiPostForm.'+id+'.disabled=false');
} else {
var h1 = document.getElementById(id);
if (h1 != null)
{
h1.disabled=false;
jslGrayLabels(h1,"#3F464C");
}
}
}
function jslCopyAndEnableValue(id_to, id_from)
{
if (navigator.appName=='Microsoft Pocket Internet Explorer')
{
eval('document.uiPostForm.'+id_to+'.value = document.uiViewForm.'+id_from+'.value');
eval('document.uiPostForm.'+id+'.disabled=false');
return;
}
var h1 = document.getElementById(id_to);
var h2 = document.getElementById(id_from);
if ((h1 != null) && (h2 != null))
{
h1.value=h2.value;
h1.disabled=false;
jslGrayLabels(h1,"#3F464C");
}
}
function jslSetAndEnableValue(id, wert)
{
if (navigator.appName=='Microsoft Pocket Internet Explorer')
{
eval('document.uiPostForm.'+id+'.value="'+wert+'"');
eval('document.uiPostForm.'+id+'.disabled=false');
return;
}
var h1 = document.getElementById(id);
if (h1 != null)
{
h1.value=wert;
h1.disabled=false;
jslGrayLabels(h1,"#3F464C");
}
}
function jslSetEnabled (id, wert) {
var h1 = document.getElementById(id);
if (h1 != null)
{
h1.disabled = !wert;
var color="#3F464C";
if (h1.disabled==true)
color="#999999";
jslGrayLabels(h1,color);
}
}
function jslGetEnabled (id) {
var h1 = document.getElementById(id);
if (h1 != null) return !(h1.disabled);
}
function jslIsVisible(id) {
var h1 = document.getElementById(id);
if (h1 != null) {
return (h1.style.display!="none");
}
return false;
}
function jslDisplay(id, toDisplay) {
var h1 = document.getElementById(id);
if (h1 != null) {
if ( toDisplay) h1.style.display="";
else h1.style.display="none";
}
}
function jslSetClass(id, wert) {
var h1 = document.getElementById(id);
if (h1 != null) h1.className=wert;
}
function jslGoToEx(Menu, Page, Titel) {
jslGoTo(Menu,Page);
}
function jslFormSubmitEx (Menu, Page, Errorpage) {
jslSubmitFormEx(Menu, Page, Errorpage);
}
function jslSubmitFormEx (Menu, Page, Errorpage) {
if ((Menu!=null) && (Menu!="")) jslSetValue("uiPostMenu", Menu);
if ((Page!=null) && (Page!="")) {
jslSetValue("uiPostPageName", Page);
jslSetValue("uiPostErrorPageName", Page);
}
if ((Errorpage!=null) && (Errorpage!="")) {
jslSetValue("uiPostErrorPageName", Errorpage);
}
jslFormSubmit("uiPostForm");
}
function UpdateDateTime() {
var date = new Date();
jslSetValue("uiPostDateTime", Math.floor(date.getTime()/1000) + "," + date.getTimezoneOffset());
}
function jslSetSpanText(id, text) {
var elem = document.getElementById(id);
if (elem != null) elem.childNodes[0].nodeValue = text;
}
function SetSpanText(id, text) {
var elem = document.getElementById(id);
if (elem != null) elem.childNodes[0].nodeValue = text;
}
function PasswortToHex(pwValue) {
var hexString = "";
for (var i = 0; i < pwValue.length; i += 1) {
var asciiValue = pwValue.charCodeAt(i);
hexString += "%"+asciiValue.toString(16);
}
return hexString;
}
function jslSetSelection (id, text) {
var box = document.getElementById(id);
if (box == null) {
return;
}
var disabled = box.disabled; // wg. Opera box enablen
box.disabled = false;
var i=0;
var n = -1;
for (i=0; i<box.length; i++) {
if (box.options[i].value == text) n = i;
}
if (n != -1) {
for (i=0; i<box.length; i++) {
box.options[i].selected = (n == i);
}
}
box.disabled = disabled;
}
function jslAddOption (id, val, text, sel, check_double_val) {
if (navigator.appName == 'Microsoft Pocket Internet Explorer') {
var entry = new Option(text, val, false, sel);
var element = eval('document.uiViewForm.'+id);
if (element == null) return;
element.add(entry);
} else {
var element = document.getElementById(id);
if(element!=null) jslAddOption_pos (id, val, text, sel, element.length, check_double_val);
}
}
function jslAddOption_pos (id, val, text, sel, pos, check_double_val) {
// var entry = new Option(convertHTML2Text(text), val, false, sel);
var entry = new Option(text, val, false, sel);
var element = document.getElementById(id);
if (element == null) return;
if(check_double_val == true){
for (var i=0; i<element.length; i++){
if (element.options[i].value == val) return; // Wert schon vorhanden
}
}
element.options[pos] = entry;
}
function PasswortToXCode (pwValue) {
var hexString = "";
for (var i = 0; i < pwValue.length; i += 1) {
var asciiValue = pwValue.charCodeAt(i);
hexString += asciiValue.toString(16);
}
return hexString;
}
function XCodeToPasswort (hexValue) {
var str = "";
for (var i = 0; i < hexValue.length; i += 2) {
str += String.fromCharCode(parseInt(hexValue.substr(i, 2),16));
}
return str;
}
function jslIsValidPath (path) {
if ((navigator.platform == "Win32") && (navigator.appName == "Microsoft Internet Explorer") && (navigator.appVersion.indexOf("MSIE 6.") >= 0)) {
if (path.indexOf("\\") == 0) return true;
if (path.indexOf(":") == 1) return true;
return false;
}
return true;
}
function jslPrintf1 (str , p1) {
var exp = new RegExp("%1(%[a-zA-Z]+%)?","g");
return str.replace(exp, p1);
}
function jslPrintf (str) {
var i,exp;
for (i=1; i<arguments.length; ++i)
{
exp = new RegExp("%"+i+"(%[a-zA-Z]+%)?","g");
str = str.replace(exp, arguments[i]);
}
return str;
}
function jslGetCountAString(TextArray ,n){
return jslGetCountString(TextArray[0],TextArray[1],TextArray[2],n);
}
function jslGetCountString(Text0,Text1,Text2 ,n){
var ncase=n;
if(ncase>2)
ncase=2;
if(ncase<0)
ncase=2;
switch(ncase){
case 0: return jslPrintf(Text0,n);
case 1: return jslPrintf(Text1,n);
case 2: return jslPrintf(Text2,n);
default: return jslPrintf(Text2,n);
}
}
function alert1 (str, p1) {
alert(jslPrintf1(str, p1));
}
function uiSelect(id) {
var h = document.getElementById(id);
if (h != null) h.select();
}
function uiFocus(id) {
var h = document.getElementById(id);
if (h != null) {
h.focus();
var nn = (h.nodeName || "").toLowerCase();
var t = (h.type || "").toLowerCase();
var selectable = false;
if (nn == 'input' && (t == 'text' || t == 'password')) {
selectable = true;
}
if (nn == 'textarea') {
selectable = true;
}
if (selectable) {
h.select();
}
}
}
function jslChangeImage ( imageName, newSource, newTitle) {
var image = document.images[imageName];
if ( image == null) {
return;
}
image.src = newSource;
image.title = newTitle;
}
function jslZebrastreifen (id) {
var even = false;
var evenColor = arguments[1] ? arguments[1] : "#FFFFFF";
var oddColor = arguments[2] ? arguments[2] : "#EEEEEE";
var table = document.getElementById(id);
if (! table) {
return;
}
var tbodies = table.getElementsByTagName("tbody");
for (var h = 0; h < tbodies.length; h++) {
var trs = tbodies[h].getElementsByTagName("tr");
for (var i = 0; i < trs.length; i++) {
if (trs[i].style.display!="none" && !trs[i].style.backgroundColor) {
var ths = trs[i].getElementsByTagName("th");
for (var j = 0; j < ths.length; j++) {
var myth = ths[j];
if (!myth.style.backgroundColor) {
myth.style.backgroundColor = even ? evenColor : oddColor;
}
}
var tds = trs[i].getElementsByTagName("td");
for (var j = 0; j < tds.length; j++) {
var mytd = tds[j];
if (!mytd.style.backgroundColor) {
mytd.style.backgroundColor = even ? evenColor : oddColor;
}
}
even = !even;
}
}
}
}
function convertHTML2Text(str) {
if (str) {
str = str.replace(/</g,"&lt;");
str = str.replace(/>/g,"&gt;");
var tst = document.createElement('div');
tst.innerHTML = str;
str = tst.innerText || tst.textContent;
}
return str;
}
function jslSetColor(id, NewColor, FontStrength) {
var h1 = document.getElementById(id);
if (h1 != null){
h1.style.color=NewColor;
h1.style.fontWeight=FontStrength;
}
}
function jslEatWhitespace(instring){
if(!instring)
return instring;
returnstr = instring.replace(/[\s,\xa0]+/g, "");
return returnstr;
}
function jslGetStorageLink(protocol, display_link_name, path_extension, samba_ftp_object)
{
var samba_server_enabled = (samba_ftp_object && samba_ftp_object.samba_server_enabled) ? samba_ftp_object.samba_server_enabled : "1";
var frominternet = (samba_ftp_object && samba_ftp_object.frominternet) ? samba_ftp_object.frominternet : "1";
var connection_ip = (samba_ftp_object && samba_ftp_object.connection_ip) ? samba_ftp_object.connection_ip : "88.64.170.194";
var interface_ip = (samba_ftp_object && samba_ftp_object.interface_ip) ? samba_ftp_object.interface_ip : "192.168.178.1";
var ftp_server_enabled = (samba_ftp_object && samba_ftp_object.ftp_server_enabled) ? samba_ftp_object.ftp_server_enabled : "1";
var ftp_password = (samba_ftp_object && samba_ftp_object.ftp_password) ? samba_ftp_object.ftp_password : "";
var storage_ftp_internet = (samba_ftp_object && samba_ftp_object.storage_ftp_internet) ? samba_ftp_object.storage_ftp_internet : "0";
var pppoe_ip = (samba_ftp_object && samba_ftp_object.pppoe_ip) ? samba_ftp_object.pppoe_ip : "88.64.170.194";
var ddns_activated = (samba_ftp_object && samba_ftp_object.ddns_activated) ? samba_ftp_object.ddns_activated : "1";
var ddns_password = (samba_ftp_object && samba_ftp_object.ddns_password) ? samba_ftp_object.ddns_password : "****";
var ddns_username = (samba_ftp_object && samba_ftp_object.ddns_username) ? samba_ftp_object.ddns_username : "jowi24";
var ddns_provider = (samba_ftp_object && samba_ftp_object.ddns_provider) ? samba_ftp_object.ddns_provider : "dyndns.org";
var ddns_domain = (samba_ftp_object && samba_ftp_object.ddns_domain) ? samba_ftp_object.ddns_domain : "majo.dyndns.info";
var link_head = "";
var fritz_nas = "";
if(path_extension == "Interner Speicher")
{
path_extension = "";
}
if(path_extension != "")
{
if(path_extension.indexOf("/") != 0)
path_extension = "/"+path_extension;
if((path_extension.lastIndexOf("/") + 1) != path_extension.length)
path_extension = path_extension+"/";
}
if(protocol.match(/samba/) == "samba")
{
if (samba_server_enabled == "1")
{
if (frominternet != "1" && typeof g_IE != 'undefined' && g_IE == true)
{
if (("0" == "1" || "1" == "0" ) && "pppoe"=="bridge")
link_head = connection_ip;
else
link_head = interface_ip;
if (ftp_password == null || ftp_password != "****")
fritz_nas="/fritz.nas";
else
path_extension = "";
return '<a href="file://'+link_head+fritz_nas+path_extension+'" target="_blank">'+display_link_name+'</a>';
}
}
}
if(protocol.match(/ftp/) == "ftp")
{
if (ftp_server_enabled == "1")
{
if (ftp_password != "")
link_head = "ftpuser@";
if (frominternet == "1" && storage_ftp_internet == "1")
{
if (!(pppoe_ip != "" && pppoe_ip != "-" && pppoe_ip != "er" && pppoe_ip != "0.0.0.0"))
pppoe_ip="";
if(ddns_activated=="1" && ddns_password!="" && ddns_username!="" && ddns_provider!="")
link_head += ddns_domain;
else
link_head += pppoe_ip;
}
else if (("0" == "1" || "1" == "0" ) && "pppoe"=="bridge")
link_head += connection_ip;
else
link_head += interface_ip;
return'<a href="ftp://'+link_head+path_extension+'" target="_blank">'+display_link_name+'</a>';
}
}
return "";
}
 
/*
Ajax Utility JavaScript Library
** No warranty is expressed or implied. **
This JavaScript library supports Ajax.
Place ajaxutility.js in the same directory as your web pages and use this code
in the <head> section of your pages:
This library supports these functions:
getText(urlToCall, functionToCallBack)
Uses the GET method to get text from the server.
getXml(urlToCall, functionToCallBack)
Uses the GET method to get XML from the server.
postDataReturnText(urlToCall, dataToSend, functionToCallBack)
Uses the POST method to send dataToSend to server, gets text back.
Pass the data to send in parameter/value pairs like this: "value=100".
postDataReturnXml(urlToCall, dataToSend, functionToCallBack)
Uses the POST method to send dataToSend to server, gets XML back.
Pass the data to send in parameter/value pairs like this: "value=100".
*/
function getText(urlToCall, functionToCallBack)
{
var XMLHttpRequestObject = getHttpRequestObject();
if(XMLHttpRequestObject) {
XMLHttpRequestObject.open("GET", urlToCall);
XMLHttpRequestObject.onreadystatechange = function()
{
if (XMLHttpRequestObject.readyState == 4 && XMLHttpRequestObject.status == 200) {
if (isLoginPage(XMLHttpRequestObject.responseText)) {
jslGoTo("","");
return;
}
functionToCallBack(XMLHttpRequestObject.responseText);
delete XMLHttpRequestObject;
XMLHttpRequestObject = null;
}
};
XMLHttpRequestObject.send(null);
}
}
function getXml(urlToCall, functionToCallBack)
{
var XMLHttpRequestObject = getHttpRequestObject();
if(XMLHttpRequestObject) {
XMLHttpRequestObject.open("GET", urlToCall);
XMLHttpRequestObject.onreadystatechange = function()
{
if (XMLHttpRequestObject.readyState == 4 && XMLHttpRequestObject.status == 200) {
if (isLoginPage(XMLHttpRequestObject.responseText)) {
jslGoTo("","");
return;
}
functionToCallBack(XMLHttpRequestObject.responseXML);
delete XMLHttpRequestObject;
XMLHttpRequestObject = null;
}
};
XMLHttpRequestObject.send(null);
}
}
function postDataGetText(urlToCall, dataToSend, functionToCallBack)
{
var XMLHttpRequestObject = getHttpRequestObject();
if(XMLHttpRequestObject) {
XMLHttpRequestObject.open("POST", urlToCall);
XMLHttpRequestObject.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
XMLHttpRequestObject.onreadystatechange = function()
{
if (XMLHttpRequestObject.readyState == 4 && XMLHttpRequestObject.status == 200) {
if (isLoginPage(XMLHttpRequestObject.responseText)) {
jslGoTo("","");
return;
}
functionToCallBack(XMLHttpRequestObject.responseText);
delete XMLHttpRequestObject;
XMLHttpRequestObject = null;
}
};
XMLHttpRequestObject.send(dataToSend);
}
}
function postDataGetXml(urlToCall, dataToSend, functionToCallBack)
{
var XMLHttpRequestObject = getHttpRequestObject();
if(XMLHttpRequestObject) {
XMLHttpRequestObject.open("POST", urlToCall);
XMLHttpRequestObject.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
XMLHttpRequestObject.onreadystatechange = function()
{
if (XMLHttpRequestObject.readyState == 4 && XMLHttpRequestObject.status == 200) {
if (isLoginPage(XMLHttpRequestObject.responseText)) {
jslGoTo("","");
return;
}
functionToCallBack(XMLHttpRequestObject.responseXML,XMLHttpRequestObject.responseText);
//delete XMLHttpRequestObject;
//XMLHttpRequestObject = null;
}
if (XMLHttpRequestObject.readyState == 4) {
delete XMLHttpRequestObject;
XMLHttpRequestObject = null;
}
};
XMLHttpRequestObject.send(dataToSend);
}
}
function postData(urlToCall, dataToSend)
{
var XMLHttpRequestObject = getHttpRequestObject();
if(XMLHttpRequestObject) {
XMLHttpRequestObject.open("POST", urlToCall);
XMLHttpRequestObject.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
XMLHttpRequestObject.setRequestHeader( 'Content-length', dataToSend.length );
XMLHttpRequestObject.onreadystatechange = function()
{
if (XMLHttpRequestObject.readyState == 4 && XMLHttpRequestObject.status == 200) {
delete XMLHttpRequestObject;
XMLHttpRequestObject = null;
}
};
XMLHttpRequestObject.send(dataToSend);
}
}
function getHttpRequestObject()
{
var XMLHttpRequestObject = null;
if (window.XMLHttpRequest) {
XMLHttpRequestObject = new XMLHttpRequest();
} else if (window.ActiveXObject) {
XMLHttpRequestObject = new ActiveXObject("Microsoft.XMLHTTP");
}
return XMLHttpRequestObject;
}
 
var g_qstClear = "Alle Einträge in der Anrufliste werden jetzt gelöscht.";
var g_qstDial = "Wollen Sie die Verbindung jetzt herstellen?";
var g_txtUnbekannt = "unbekannt";
var g_txtFestnetz = "Festnetz";
var g_txtInternetprefix = "Internet";
var g_txtAddBuch = "zum Telefonbuch hinzufügen";
var g_NoKennwortNoDial="Die Wählhilfe steht nur bei aktivem Kennwortschutz zur Verfügung. Der Kennwortschutz ist nicht aktiv.";
var g_sym1 = "<img src=\"../html/de/images/Callin.gif\" title=\"eingehender Anruf\">";
var g_sym2 = "<img src=\"../html/de/images/Callinfailed.gif\" title=\"eingehender Anruf in Abwesenheit\">";
var g_sym3 = "<img src=\"../html/de/images/Callout.gif\" title=\"ausgehender Anruf\">";
var g_sym0 = "<img src=\"../html/de/images/Callno.gif\">";
var g_Fon1 = "Nebenstelle FON 1";
var g_Fon2 = "Nebenstelle FON 2";
var g_Fon3 = "Nebenstelle FON 3";
var g_Port0 = "FON 1";
var g_Port1 = "FON 2";
var g_Port2 = "FON 3";
var g_Port3 = "Callthrough";
var g_Port4 = "ISDN Gerät";
var g_Port5 = "Fax (intern/PC)";
var g_Port6 = "Anrufbeantworter";
var g_Port36 = "Data S0";
var g_Port37 = "Data PC";
var g_txtIsdn = "ISDN-Telefone";
var g_alleTelefone = "alle Telefone";
var g_txtMld1 = "Verbindung mit %1%PhoneNumber% wird hergestellt...";
var g_txtMld2 = "Heben Sie jetzt bitte den Hörer %1%PhoneName% ab bzw. drücken Sie die grüne Hörertaste auf Ihrem Telefon.";
var g_txtMld3 = "Um die Anwahl zu beenden, klicken Sie auf Abbrechen.";
var g_txtWarn = "Wenn Sie die Anrufliste nicht anzeigen, werden die Anrufe nicht mehr gespeichert und die vorhandene Liste wird gelöscht.";
var g_txtContinue = "Möchten Sie fortfahren?";
var g_IPTelefon = "IP-Telefon 6";
var g_Loaded = false;
var g_txtFon50 = "";
g_txtFon50 = "ISDN-Telefon";
g_txtFon50 = "Schnurlostelefon";
g_txtFon50 = "ISDN- und Schnurlostelefon";
var g_expertMode = "1";
<!-- ":-)" -->
 
 
 
var g_type=0;
var g_no=0;
//var g_minOnTelId = 240;
function uiDoOnLoad() {
document.title = "FRITZ!Box Anrufliste";
g_type = jslGetValue("uiPostType");
uiDoSetTypeEx(Number(g_type));
// telcfg:settings/Phonebook/Refresh
var i = "62";
//jslZebrastreifen("tClient");
if (jslGetValue("uiPostShowDialing") != "") {
var mld = jslPrintf1(g_txtMld1, jslGetValue("uiPostShowDialing"))+"\x0A\x0A"+
jslPrintf1(g_txtMld2, GetFonDeviceName(jslGetValue("uiPostDialPort")))+
"\x0A\x0A"+g_txtMld3;
jslSetValue("uiPostShowDialing", "");
if (!confirm(mld)) {
jslEnable("uiPostHangup");
jslFormSubmitEx("", "");
}
}
if (g_expertMode == "1") {
jslDisplay("UseJournal", true);
jslSetChecked("uiViewUseJournal", jslGetValue("uiPostUseJournal") == "1");
} else
jslDisplay("UseJournal", false);
jslDisplay("buttonExport", true);
g_Loaded = true;
 
GetAllFonCalls();
 
}
function GetAllFonCalls(){
var url = "../cgi-bin/webcm?getpage=../html/de/home/foncallsdaten.xml";
url += "&sid=3a8ef4a34cfcf8a7";
getXml(url, ajaxFoncallsCB);
}
function uiDoRefresh() {
jslGoTo("", "foncalls");
}
function uiDoCancel() {
jslGoTo("", "foncalls");
}
function uiDoSave() {
if (g_expertMode == "1") {
jslSetValue("uiPostUseJournal", jslGetChecked("uiViewUseJournal") ? "1":"0");
jslFormSubmitEx("", "foncalls");
}
}
function uiDoClear() {
if (!confirm(g_qstClear)) return;
jslEnable("uiPostClearJournal");
jslFormSubmitEx(jslGetValue("uiPostMenu"), "foncalls");
}
function uiDoHelp() {
jslPopHelp("hilfe_fon_anrufliste");
}
function uiDoExport() {
document.getElementById("uiPostExport").submit();
}
function uiCallSymbol (n) {
switch (n) {
case "1": return g_sym1;
case "2": return g_sym2;
case "3": return g_sym3;
}
return g_sym0;
}
function uiDoSetTypeEx(n) {
g_type = n;
jslSetValue("uiPostType", n);
cnt = g_no;
switch (n) {
case 3:
jslDisplay("uiShowTabOut", true);
jslDisplay("uiShowTabAll", false);
jslDisplay("uiShowTabIn", false);
jslDisplay("uiShowTabFailed", false);
for (i=0; i<cnt; i++) {
jslDisplay("no"+i+"type"+"3", true);
jslDisplay("no"+i+"type"+"1", false);
jslDisplay("no"+i+"type"+"2", false);
}
break;
case 2:
jslDisplay("uiShowTabOut", false);
jslDisplay("uiShowTabAll", false);
jslDisplay("uiShowTabIn", false);
jslDisplay("uiShowTabFailed", true);
for (i=0; i<cnt; i++) {
jslDisplay("no"+i+"type"+"3", false);
jslDisplay("no"+i+"type"+"1", false);
jslDisplay("no"+i+"type"+"2", true);
}
break;
case 1:
jslDisplay("uiShowTabOut", false);
jslDisplay("uiShowTabAll", false);
jslDisplay("uiShowTabIn", true);
jslDisplay("uiShowTabFailed", false);
for (i=0; i<cnt; i++) {
jslDisplay("no"+i+"type"+"3", false);
jslDisplay("no"+i+"type"+"1", true);
jslDisplay("no"+i+"type"+"2", false);
}
break;
default:
jslDisplay("uiShowTabOut", false);
jslDisplay("uiShowTabAll", true);
jslDisplay("uiShowTabIn", false);
jslDisplay("uiShowTabFailed", false);
for (i=0; i<cnt; i++) {
jslDisplay("no"+i+"type"+"3", true);
jslDisplay("no"+i+"type"+"1", true);
jslDisplay("no"+i+"type"+"2", true);
}
break;
}
}
function uiDialPortDisplay (n) {
var name = n;
switch (n) {
case "1":
name = jslGetValue("uiPostFon0");
if (name.length == 0) name = g_Fon1;
break;
case "2":
name = jslGetValue("uiPostFon1");
if (name.length == 0) name = g_Fon2;
break;
case "50": name = g_txtIsdn; break;
 case "51": name = jslGetValue("uiPostIsdnNumber1"); break;
 case "52": name = jslGetValue("uiPostIsdnNumber2"); break;
 case "53": name = jslGetValue("uiPostIsdnNumber3"); break;
 case "54": name = jslGetValue("uiPostIsdnNumber4"); break;
 case "55": name = jslGetValue("uiPostIsdnNumber5"); break;
 case "56": name = jslGetValue("uiPostIsdnNumber6"); break;
 case "57": name = jslGetValue("uiPostIsdnNumber7"); break;
 case "58": name = jslGetValue("uiPostIsdnNumber8"); break;
 
}
return name;
}
function uiPortDisplay (n,PortName) {
var name = n;
switch(n) {
case "3":
if (PortName.length>0)
name = PortName;
else
name = g_Port3;
break;
case "4":
if (PortName.length>0)
name = PortName;
else
name = g_Port4;
break;
case "5":
if (PortName.length>0)
name = PortName;
else
name = g_Port5;
break;
case "6":
if (PortName.length>0)
name = PortName;
else
name = g_Port6;
break;
case "36":
if (PortName.length>0)
name = PortName;
else
name = g_Port36;
break;
case "37":
if (PortName.length>0)
name = PortName;
else
name = g_Port37;
break;
//------------
case "0":
if (PortName.length>0)
name = PortName;
else
{
name = "DECT extern";
if (name.length == 0) name = g_Port0;
}
break;
case "1":
if (PortName.length>0)
name = PortName;
else
{
name = "";
if (name.length == 0) name = g_Port1;
}
break;
case "2":
if (PortName.length>0)
name = PortName;
else
{
name = "";
if (name.length == 0) name = g_Port2;
}
break;
//------------
case "40":
case "41":
case "42":
case "43":
case "44":
case "45":
case "46":
case "47":
case "48":
case "49":
case "20":
case "21":
case "22":
case "23":
case "24":
case "25":
case "26":
case "27":
case "28":
case "29":
case "10":
case "11":
case "12":
case "13":
case "14":
case "15":
case "16":
case "17":
case "18":
case "19":
if (PortName.length>0)
name = PortName;
else
name = n;
break;
default: name = n; break;
}
return span(name);
}
function uiGetInternRufNr(port)
{
return "6"+port;
}
function GetBuchNumberType(telbooknumbertyp){
if(telbooknumbertyp=="work"){return "geschäftl.";}
if(telbooknumbertyp=="home"){return "privat";}
if(telbooknumbertyp=="mobile"){return "mobil";}
return "";
}
function GetBuchEntryInfo(buchname,buchnrtype){
if(buchname=="")
return "";
if(buchnrtype=="")
return buchname;
else{
buchentryinfo=buchname + " ("+buchnrtype+")";
return buchentryinfo;
}
}
function uiNummerDisplay (nr, name,telbooknumbertyp) {
var buchname = GetBuchName(name);
var buchnrtype = GetBuchNumberType(telbooknumbertyp);
var buchentryinfo = GetBuchEntryInfo(buchname,buchnrtype);
var tooltip=nr;
if (nr!="")
tooltip=buchentryinfo+" = "+nr;
if (nr=="" && buchname=="") return g_txtUnbekannt;
if ("1" == "1") {
if (nr == "") return span(buchentryinfo);
if (buchname == "") {
return "<nobr>" +
"<a href=\"javascript:Dial('"+nr+"')\" title=\""+nr+"\">"+nr+"</a></nobr>";
}
return "<nobr><a href=\"javascript:Dial('"+nr+"')\" title=\""+tooltip+"\">"+buchentryinfo+"</a></nobr>";
} else {
return spanEx(tooltip,buchname=="" ? nr:buchentryinfo);
}
}
function uiRouteDisplay (n, t) {
var name;
if (t == "0") {
name = n == "" ? g_txtFestnetz : n;
} else {
switch (n) {
 
case "0": name = g_txtInternetprefix+": "+"111"; break;
 
case "1": name = g_txtInternetprefix+": "+"222"; break;
 
case "2": name = g_txtInternetprefix+": "+"333"; break;
 
default: name = n; break;
}
}
return span(name);
}
function ZweistelligeNummer (n) {
if (n>9) return n.toString();
return "0"+n.toString();
}
function IsNoKennwortSet(){
strPw="****";
return (strPw.length == 0)?true:false;
}
function Dial (n) {
if (jslGetValue("uiPostClickToDial") != "1") return;
if(IsNoKennwortSet()){
if(confirm(g_NoKennwortNoDial)) {
var dialstr = "fon";
dialstr += ";";
dialstr += "foncalls";
jslSetValue("uiWaehlhilfeVon", dialstr);
jslFormSubmitEx("system","user");
}
return;
}
if (!confirm(g_qstDial)) return;
jslSetValue("uiPostDial", n);
jslSetValue("uiPostShowDialing", n);
jslEnable("uiPostDial");
jslFormSubmitEx(jslGetValue("uiPostMenu"), "foncalls");
}
function isVIP (name) {
return name.length > 0 && name.charAt(0) == '!';
}
function GetBuchName (name) {
if (isVIP(name)) return name.substr(1);
return name;
}
function span(str) {
return "<nobr><span title=\""+ str + "\">" + str + "</span></nobr>";
}
function spanEx(str1,str2) {
return "<nobr><span title=\""+ str1 + "\">" + str2 + "</span></nobr>";
}
function BuchBtn(name, rufnummer) {
if (name != "") {
return "";
}
if (rufnummer == "") {
return "";
}
var click = "uiDoBuch('"+name+"','"+rufnummer+"')";
return BmpBtn(click, g_txtAddBuch, "../html/de/images/fonbuch.gif");
}
function BmpBtn(click, value, bmp) {
return "<button type=\"button\" onClick=\""+click+"\" value=\""+value+"\" title=\""+value+"\" style=\"padding:0px;width:34px; text-align:center\"><img src=\""+bmp+"\" align=middle width=16 height=16 hspace=4></button></td>";
}
function TrCall(type, datum, name, rufnummer, port, route, routetype, dauer,telbooknumbertyp,PortName) {
var str = "<tr style=\"display:none;\" id=\"no"+g_no+"type"+type+"\">";
str += "<td class=\"c1\">"+ uiCallSymbol(type)+"</td>";
str += "<td class=\"c3\">"+ span(datum)+"</td>";
str += "<td class=\"c8\">"+ uiNummerDisplay(rufnummer, name,telbooknumbertyp)+"</td>";
str += "<td class=\"c5\">"+ uiPortDisplay(port,PortName)+"</td>";
str += "<td class=\"c7\">"+ uiRouteDisplay(route, routetype)+"</td>";
str += "<td class=\"c6a\">"+ span(dauer)+"</td>";
str += "<td class=\"c9\">"+ BuchBtn(name,rufnummer) + "</td>";
str += "</tr>";
g_no++;
return str;
}
function isOnlinePbId(pbId) {
var num = parseInt(pbId,10) || -1;
return 240 <= num && num <= 254;
}
function uiDoBuch(name, nummer) {
if (!g_Loaded) return; // Seite nicht komplett geladen, GetFreeCode scheitert
jslSetValue("uiPostEntryNew", "Entry60");
jslSetValue("uiPostEntryNumber", nummer);
jslSetValue("uiPostEntryXCount", "0"); // Es sind noch keine Einträge vorhanden
jslSetValue("uiPostPageMaster", "foncalls");
jslSetValue("uiPostVonFoncalls", "1");
var pbId = jslGetValue("uiPostPhonebookId");
jslSetValue("uiPostCurrFonbookID", pbId);
//if (pbId == "0")
if (!isOnlinePbId(pbId)) {
jslSetValue("uiPostCurrFonbookID", pbId);
jslGoTo("", "fonbuch2");
}
else {
jslGoTo("", "fonbuch2_new");
}
}
function GetFreeCode () {
var n = 0;
var i;
var c = 0;
while (c<99) {
c = c+1;
var code_besetzt = false;
for (i=0; i<n; i++) {
if (Number(jslGetValue("uiPostCode"+i)) == c) code_besetzt = true;
}
if (!code_besetzt) {
if (c < 10) return "0"+c;
return c;
}
}
return "01";
}
function GetFonDeviceName( id) {
var deviceName = "";
var intern = "";
switch (id) {
case "1":
deviceName = jslGetValue("uiPostFon0");
if (deviceName.length == 0) deviceName = g_Fon1;
break;
case "2":
deviceName = jslGetValue("uiPostFon1");
if (deviceName.length == 0) deviceName = g_Fon2;
break;
case "3":
deviceName = jslGetValue("uiPostFon2");
if (deviceName.length == 0) deviceName = g_Fon3;
break;
case "51":
deviceName = jslGetValue("uiPostIsdn1");
if (deviceName.length == 0) deviceName = g_txtIsdn;
break;
case "52":
deviceName = jslGetValue("uiPostIsdn2");
if (deviceName.length == 0) deviceName = g_txtIsdn;
break;
case "53":
deviceName = jslGetValue("uiPostIsdn3");
if (deviceName.length == 0) deviceName = g_txtIsdn;
break;
case "54":
deviceName = jslGetValue("uiPostIsdn4");
if (deviceName.length == 0) deviceName = g_txtIsdn;
break;
case "55":
deviceName = jslGetValue("uiPostIsdn5");
if (deviceName.length == 0) deviceName = g_txtIsdn;
break;
case "56":
deviceName = jslGetValue("uiPostIsdn6");
if (deviceName.length == 0) deviceName = g_txtIsdn;
break;
case "57":
deviceName = jslGetValue("uiPostIsdn7");
if (deviceName.length == 0) deviceName = g_txtIsdn;
break;
case "58":
deviceName = jslGetValue("uiPostIsdn8");
if (deviceName.length == 0) deviceName = g_txtIsdn;
break;
case "50":
deviceName = g_txtFon50;
break;
case "60":
deviceName = id;
if (document.getElementById("uiPostFoncontrol"+1))
{
intern = jslGetValue("uiPostFoncontrolIntern"+1);
if (intern.length > 0)
{
deviceName = jslGetValue("uiPostFoncontrol"+1);
}
}
break;
case "61":
deviceName = id;
if (document.getElementById("uiPostFoncontrol"+2))
{
intern = jslGetValue("uiPostFoncontrolIntern"+2);
if (intern.length > 0)
{
deviceName = jslGetValue("uiPostFoncontrol"+2);
}
}
break;
case "62":
deviceName = id;
if (document.getElementById("uiPostFoncontrol"+3))
{
intern = jslGetValue("uiPostFoncontrolIntern"+3);
if (intern.length > 0)
{
deviceName = jslGetValue("uiPostFoncontrol"+3);
}
}
break;
case "63":
deviceName = id;
if (document.getElementById("uiPostFoncontrol"+4))
{
intern = jslGetValue("uiPostFoncontrolIntern"+4);
if (intern.length > 0)
{
deviceName = jslGetValue("uiPostFoncontrol"+4);
}
}
break;
case "64":
deviceName = id;
if (document.getElementById("uiPostFoncontrol"+5))
{
intern = jslGetValue("uiPostFoncontrolIntern"+5);
if (intern.length > 0)
{
deviceName = jslGetValue("uiPostFoncontrol"+5);
}
}
break;
case "65":
deviceName = id;
if (document.getElementById("uiPostFoncontrol"+6))
{
intern = jslGetValue("uiPostFoncontrolIntern"+6);
if (intern.length > 0)
{
deviceName = jslGetValue("uiPostFoncontrol"+6);
}
}
break;
case "66":
deviceName = id;
if (document.getElementById("uiPostFoncontrol"+7))
{
intern = jslGetValue("uiPostFoncontrolIntern"+7);
if (intern.length > 0)
{
deviceName = jslGetValue("uiPostFoncontrol"+7);
}
}
break;
case "67":
deviceName = id;
if (document.getElementById("uiPostFoncontrol"+8))
{
intern = jslGetValue("uiPostFoncontrolIntern"+8);
if (intern.length > 0)
{
deviceName = jslGetValue("uiPostFoncontrol"+8);
}
}
break;
case "68":
deviceName = id;
if (document.getElementById("uiPostFoncontrol"+9))
{
intern = jslGetValue("uiPostFoncontrolIntern"+9);
if (intern.length > 0)
{
deviceName = jslGetValue("uiPostFoncontrol"+9);
}
}
break;
case "69":
deviceName = id;
if (document.getElementById("uiPostFoncontrol"+10))
{
intern = jslGetValue("uiPostFoncontrolIntern"+10);
if (intern.length > 0)
{
deviceName = jslGetValue("uiPostFoncontrol"+10);
}
}
break;
default: deviceName = id;
break;
}
return deviceName;
}
function ShowMsg()
{
check=jslGetChecked("uiViewUseJournal")
if (!check)
{
if (confirm(g_txtWarn+"\n"+g_txtContinue))
{
return "1";
}
else
{
jslSetChecked("uiViewUseJournal", 1);
return "0";
}
}
return "0";
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////// AJAX /////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
var g_Foncalls=null;
/* Callback of the AjaxObject */
function ajaxFoncallsCB( xmlDocument )
{
FoncallsXMLNode = xmlDocument.documentElement;
g_Foncalls = FoncallsXMLNode.getElementsByTagName('Calls');
if(g_Foncalls==null)
return;
if( g_Foncalls.length > 0 )
{
document.getElementById("uiShowFoncalls").innerHTML=TrCallEx();
 
uiDoSetType(Number(g_type));
}
}
function GetNodeData(node,keyname){
if(node==null)
return "";
if( node.getElementsByTagName(keyname)[0].firstChild==null )
return "";
if(node.getElementsByTagName(keyname)[0].firstChild.data==null)
return "";
return node.getElementsByTagName(keyname)[0].firstChild.data;
}
function TrCallEx() {
var str = "";
str += "<table id=\"tClient\">";
str += "<tr>";
str += "<th class=\"c1\"></th>";
str += "<th class=\"c3\">Datum</th>";
str += "<th class=\"c8\">Name / Rufnummer</th>";
str += "<th class=\"c5\">Telefoniegerät</th>";
str += "<th class=\"c7\">Eigene Rufnummer</th>";
str += "<th class=\"c6\">Dauer (hh:mm)</th>";
str += "<th class=\"c9\">&nbsp;</th>";
str += "</tr>";
if (g_Foncalls != null) {
jslSetSpanText("uiShowCnt", " (insgesamt "+ g_Foncalls.length + " " + "Anrufe" + ")");
for (var i=0; i< g_Foncalls.length; i++) {
var mytype = GetNodeData(g_Foncalls[i], 'Type');
var datum = GetNodeData(g_Foncalls[i], 'Date');
var rufnummer = GetNodeData(g_Foncalls[i], 'Number');
var myname = GetNodeData(g_Foncalls[i], 'Name');
var telbooknumbertyp = GetNodeData(g_Foncalls[i], 'FonbookType');
var myport = GetNodeData(g_Foncalls[i], 'Port');
var route = GetNodeData(g_Foncalls[i], 'Route');
var routetype = GetNodeData(g_Foncalls[i], 'RouteType');
var dauer = GetNodeData(g_Foncalls[i], 'Duration');
var PortName = GetNodeData(g_Foncalls[i], 'PortName');
switch (mytype) {
case "1":
str += "<tr id=\"no"+i+"\" class=\"out failed\">";
break;
case "2":
str += "<tr id=\"no"+i+"\" class=\"in out\">";
break;
case "3":
str += "<tr id=\"no"+i+"\" class=\"in failed\">";
break;
default:
str += "<tr id=\"no"+i+"\">";
break;
}
str += "<td class=\"c1\">"+ uiCallSymbol(mytype)+"</td>";
str += "<td class=\"c3\">"+ span(datum)+"</td>";
str += "<td class=\"c8\">"+ uiNummerDisplay(rufnummer, myname,telbooknumbertyp)+"</td>";
str += "<td class=\"c5\">"+ uiPortDisplay(myport,PortName)+"</td>";
str += "<td class=\"c7\">"+ uiRouteDisplay(route, routetype)+"</td>";
str += "<td class=\"c6a\">"+ span(dauer)+"</td>";
str += "<td class=\"c9\">"+ BuchBtn(myname,rufnummer) + "</td>";
str += "</tr>";
}
}
str += "</table>";
return str;
}
function uiDoSetType(n) {
g_type = n;
jslSetValue("uiPostType", n);
switch (n) {
case 3:
jslDisplay("uiShowTabOut", true);
jslDisplay("uiShowTabAll", false);
jslDisplay("uiShowTabIn", false);
jslDisplay("uiShowTabFailed", false);
document.getElementById("tClient").className="Out";
break;
case 2:
jslDisplay("uiShowTabOut", false);
jslDisplay("uiShowTabAll", false);
jslDisplay("uiShowTabIn", false);
jslDisplay("uiShowTabFailed", true);
document.getElementById("tClient").className="Failed";
break;
case 1:
jslDisplay("uiShowTabOut", false);
jslDisplay("uiShowTabAll", false);
jslDisplay("uiShowTabIn", true);
jslDisplay("uiShowTabFailed", false);
document.getElementById("tClient").className="In";
break;
default:
jslDisplay("uiShowTabOut", false);
jslDisplay("uiShowTabAll", true);
jslDisplay("uiShowTabIn", false);
jslDisplay("uiShowTabFailed", false);
document.getElementById("tClient").className="ShowAllType";
break;
}
}
</script> 
 
 
<script type="text/javascript"> 
var jxl = jxl || {
get: function (idOrElement) {
if (typeof idOrElement == 'string') {
return document.getElementById(idOrElement);
}
return idOrElement;
},
setHtml: function (idOrElement,txt) {
var elem = jxl.get(idOrElement);
if (elem) {
elem.innerHTML = txt;
}
},
setText: function (idOrElement,txt) {
var elem = jxl.get(idOrElement);
if (elem) {
if (elem.hasChildNodes()) {
elem.innerHTML = "";
}
elem.appendChild(document.createTextNode(txt));
}
},
getBy: function (idOrElement,tag,filter) {
var elem = jxl.get(idOrElement) || document;
var result = [];
if (elem) {
tag = tag || "*";
var noFilter = !(typeof filter == 'function');
var nodes = elem.getElementsByTagName(tag);
for (var i = 0, len = nodes.length; i < len; i++) {
if (noFilter || filter(nodes[i])) {
result.push(nodes[i]);
}
}
}
return result;
},
cssStrToCamelCase: function (str) {
var strArr = str.split("-");
var ret = strArr[0];
for (var i = 1, len = strArr.length; i < len; i++) {
ret += strArr[i].charAt(0).toUpperCase() + strArr[i].slice(1);
}
return ret;
},
setOpacity: function (idOrElement, val) {
var elem = jxl.get(idOrElement);
if (elem) {
elem.style.opacity = val;
elem.style.filter = 'alpha(opacity=' + (val * 100).toFixed(0) + ')';
}
},
setStyleFloat: function (idOrElement, val) {
var elem = jxl.get(idOrElement);
if (elem) {
elem.style.cssFloat = val;
elem.style.styleFloat = val;
}
},
setStyle: function (idOrElement, cssName, cssValue) {
if (typeof cssName == 'string') {
switch (cssName) {
case 'opacity':
jxl.setOpacity(idOrElement, cssValue);
break;
case 'float':
jxl.setStyleFloat(idOrElement, cssValue);
break;
default:
var elem = jxl.get(idOrElement);
if (elem) {
elem.style[jxl.cssStrToCamelCase(cssName)] = cssValue;
}
break;
}
}
},
setStyles: function (idOrElement, css) {
for (var cssName in css) {
jxl.setStyle(idOrElement, cssName, css[cssName]);
}
},
getCurrentStyle: function (idOrElement,cssName) {
var elem = jxl.get(idOrElement);
var theStyle = null;
if (elem) {
if (window.getComputedStyle) {
theStyle = window.getComputedStyle(elem, null);
}
else if (document.defaultView && document.defaultView.getComputedStyle) {
theStyle = document.defaultView.getComputedStyle(elem, null);
}
else if (elem.currentStyle) {
theStyle = elem.currentStyle;
}
}
if (!theStyle) {
theStyle = elem.style;
}
if (theStyle && cssName) {
return theStyle[jxl.cssStrToCamelCase(cssName)];
}
return theStyle;
},
reduceWhiteSpace: function (str) {
str = str.replace(/^\s+|\s+$/g, "");
str = str.replace(/[\s,\xa0]+/g, " ");
return str;
},
classNameCache: {},
classNameRegExp: function (theClassName) {
if (!jxl.classNameCache[theClassName]) {
jxl.classNameCache[theClassName] = new RegExp('(?:^|\\s+)' + theClassName + '(?:\\s+|$)');
}
return jxl.classNameCache[theClassName];
},
hasClass: function (idOrElement, theClassName) {
var elem = jxl.get(idOrElement);
if (!elem) {
return false;
}
var r = jxl.classNameRegExp(theClassName);
return r.test(elem.className);
},
addClass: function (idOrElement, theClassNames) {
var elem = jxl.get(idOrElement);
if (elem) {
var theClasses = jxl.reduceWhiteSpace(theClassNames).split(' ');
for (var i = 0, len = theClasses.length; i < len; i++) {
if (!jxl.hasClass(elem, theClasses[i])) {
elem.className = [elem.className,theClasses[i]].join(' ');
}
}
elem.className = jxl.reduceWhiteSpace(elem.className);
}
},
removeClass: function (idOrElement, theClassNames) {
var elem = jxl.get(idOrElement);
if (elem) {
var theClasses = jxl.reduceWhiteSpace(theClassNames).split(' ');
var r;
for (var i = 0, len = theClasses.length; i < len; i++) {
r = jxl.classNameRegExp(theClasses[i]);
if (r.test(elem.className)) {
elem.className = elem.className.replace(r," ");
}
}
elem.className = jxl.reduceWhiteSpace(elem.className);
}
},
isQuirksMode: function () {
return (typeof document.compatMode != 'string' || document.compatMode.indexOf('CSS') == -1);
},
toNumber: function (num,defaultNum) {
var n = parseInt(num);
return isNaN(n) ? (defaultNum || 0) : n;
},
getDoc: function () {
return (jxl.isQuirksMode()) ? document.body : document.documentElement;
},
getDocSizes: function () {
var ret = {};
var doc = jxl.getDoc();
for (var i = 0; i < arguments.length; i++) {
ret[arguments[i]] = jxl.toNumber(doc[arguments[i]],0);
}
return ret;
},
addEventHandler: function (idOrElement,eventName,handlerFunction) {
var elem = jxl.get(idOrElement);
if (elem) {
if (elem.addEventListener) {
if (eventName == 'mousewheel') {
elem.addEventListener('DOMMouseScroll', handlerFunction, false);
}
elem.addEventListener(eventName, handlerFunction, false);
return true;
}
else if (elem.attachEvent) {
elem.attachEvent("on" + eventName, handlerFunction);
return true;
}
return false;
}
return false;
},
removeEventHandler: function (idOrElement,eventName,handlerFunction) {
var elem = jxl.get(idOrElement);
if (elem) {
if (elem.addEventListener) {
if (eventName == 'mousewheel') {
elem.removeEventListener('DOMMouseScroll', handlerFunction, false);
}
elem.removeEventListener(eventName, handlerFunction, false);
}
else if (elem.attachEvent) {
elem.detachEvent("on" + eventName, handlerFunction);
}
}
},
cancelEvent: function (evt) {
evt = evt || window.event;
if(evt.stopPropagation) {
evt.stopPropagation();
}
if(evt.preventDefault) {
evt.preventDefault();
}
evt.cancelBubble = true;
evt.cancel = true;
evt.returnValue = false;
return false;
}
};
 
var globalOnClick = (function() {
function checkElem(elem) {
var tag = (elem.tagName || "").toLowerCase();
//var type = (elem.type || "").toLowerCase();
var target = (elem.target || "").toLowerCase();
switch (tag) {
case "a":
return target == "";
case "button":
return elem.id == "uiSubmitLogin";
}
return false;
}
function isLinkWithOnclick(elem) {
var tag = (elem.tagName || "").toLowerCase();
return tag == "a" && elem.onclick;
}
function isChrome() {
var s = navigator.userAgent;
return s.indexOf("Chrome") > -1
}
function globalClickHandler(evt) {
evt = evt || window.event;
var elem = evt.target || evt.srcElement;
if (isLinkWithOnclick(elem)) {
return false;
}
if (checkElem(elem)) {
jxl.setStyle(elem, "cursor", "wait");
setTimeout(function() { jxl.setStyle(elem, "cursor", ""); elem = null; }, 3000);
}
return true;
}
function init() {
if (isChrome()) {
return;
}
jxl.addEventHandler(document, "click", globalClickHandler);
}
return {
init: init
};
})();
 
function jslAddSpanText(id, text) {
var elem = document.getElementById(id);
if (elem != null)
elem.childNodes[0].nodeValue += text;
}
function WriteTime(id)
{
if (g_StopTimeWrite)
return;
var CurTimeObj = new Date();
var time = CurTimeObj.getTime();
//jslAddSpanText("uiCurrentTime","("+id+" -- "+(time-g_StartTime)+" --)");
jslSetSpanText("uiCurrentTime","("+(time-g_StartTime)+" ms)");
return;
}
function uiDoOnLoadFirst()
{
globalOnClick.init();
uiDoOnLoad();
WriteTime(0);
}
</script> 
 
 
 
 
 
</head> 
<body onload="uiDoOnLoadFirst()"> 
<div id="uiTooltip" style="position:absolute;display:none;background-color:lightyellow;padding:5px;border:1px;border-color:black;border-style:solid;"></div> 
<table style="margin: auto;"> 
<tr><td> 
<div class="fw_header"> 
<img src="../html/de/images/leer.gif" width="120" height="70" usemap="#logo"> 
<map name="logo"> 
<area shape="rect" coords="10,0,110,70" href="javascript:OnOverview()"> 
</map> 
</div> 
<div class="fw_bg_body"> 
<table> 
<tr> 
<td id="Menuhead">&nbsp;
</td> 
<td id="Datahead"> 
<div id="contenthead" align="center" > 
<table style="width:787px;table-layout:fixed;margin-bottom:8px;font-size:13px;"> 
<tr style="padding:0;"> 
<td id="sub_menu_head" style="text-align:right; padding:0;padding-right:8px;" > 
 
<a href="/logout.lua?sid=3a8ef4a34cfcf8a7&amp;" title="Von der Benutzeroberfläche abmelden" style=""> 
<img src="/css/default/images/icon_abmelden.gif" style="vertical-align: middle;">Abmelden
</a> 
 
<a href="javascript:jslGoTo('system','extended');" title="Ansicht" > 
 
<img src="/css/default/images/icon_ansicht_expert.gif" style="vertical-align: middle;"><span>Ansicht:</span></a><span style="vertical-align:-2px;"> Experte</span> 
 
<a href="javascript:GoToSitemap();" title="Inhalt" style=""> 
<img src="/css/default/images/icon_sitemap.gif" style="vertical-align: middle;">Inhalt
</a> 
<a href="javascript:jslPopHelpEx('home', '')" title="Hilfe" style=""> 
<img src="/css/default/images/help.gif" style="vertical-align: middle;">Hilfe
</a> 
</td> 
</tr> 
</table> 
</div> 
</td> 
</tr> 
<tr> 
<td id="Menuspalte"> 
<div id="menucontent"> 
 
<div style=""> 
<div class="menu_bar_left_head"></div> 
<div class="menu_bar_right_head"></div> 
<div class="menu_bar_back_head"> 
<div id="MainMenuhead"> 
</div> 
</div> 
</div> 
<div class="menu_body_outer"> 
<ul class="LMenu"> 
 
 
 
<li class="LMenuitemTop"> 
<a href="javascript:jslGoTo('home','home')">Übersicht</a> 
</li> 
 
<li class="LMenuitemTop"> 
<a href="javascript:jslGoTo('internet','inetstat')">Internet</a> 
</li> 
 
 
<li class="selected submenu"> 
<a href="javascript:jslGoTo('fon','foncalls')">Telefonie</a> 
<ul> 
 
 
 
 
 
<li class="selected"><a href="javascript:jslGoTo('fon','foncalls')">Anrufe</a><span class="PTextOnly">Anrufe</span></li> 
 
 
 
 
 
 
 
 
 
 
<li class="LSubitem"><a href="javascript:jslGoTo('fon','fonbuch')">Telefonbuch</a><span class="PTextOnly">Telefonbuch</span></li> 
 
 
<li class="LSubitem"><a href="javascript:jslGoTo('fon','wecker')">Weckruf</a><span class="PTextOnly">Weckruf</span></li> 
 
 
 
 
<li class="LSubitem"><a href="javascript:jslGoTo('fon','rulall')">Rufumleitung</a><span class="PTextOnly">Rufumleitung</span></li> 
 
 
 
 
<li class="LSubitem"><a href="javascript:jslGoTo('fon','routing')">Wahlregeln</a><span class="PTextOnly">Wahlregeln</span></li> 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
<li class="LSubitem"><a href="javascript:jslGoTo('fon','fondevices')">Telefoniegeräte</a><span class="PTextOnly">Telefoniegeräte</span></li> 
 
 
 
 
 
 
<li class="LSubitem"><a href="javascript:jslGoTo('fon','siplist')">Internettelefonie</a><span class="PTextOnly">Internettelefonie</span></li> 
 
 
 
 
</ul> 
</li> 
 
 
<li class="LMenuitemTop"> 
<a href="javascript:jslGoTo('net','net')">Heimnetz</a> 
</li> 
 
 
<li class="LMenuitemTop"> 
<a href="javascript:jslGoTo('wlan','wlan')">WLAN</a> 
</li> 
 
 
 
 
<li class="LMenuitemTop"> 
<a href="javascript:jslGoTo('dect','setting')">DECT</a> 
</li> 
 
 
<li class="LMenuitemTop"> 
<a href="javascript:jslGoTo('system','syslog')">System</a> 
</li> 
 
</ul> 
 
</div> 
<div style="position:relative;top:-21px"> 
<div class="menu_bar_left_bottom"></div> 
<div class="menu_bar_right_bottom"></div> 
<div class="menu_bar_back_bottom"> 
<div id="MainMenubottom"> 
</div> 
</div> 
</div> 
<div class="clear_float"></div> 
<div style="position:relative;top:-21px"> 
<div class="small_bar_left_head"></div> 
<div class="small_bar_right_head"></div> 
<div class="small_bar_back_head"> 
<div id="MainWizardhead" style="padding-top:2px;"> 
<ul> 
 
<li> 
<a href="javascript:jslGoTo('konfig','home')">Assistenten</a> 
</li> 
 
<li class="explain"> 
Einrichten, Update, Telefone
</li> 
</ul> 
</div> 
</div> 
<div class="small_bar_left_bottom"></div> 
<div class="small_bar_right_bottom"></div> 
<div class="small_bar_back_bottom"> 
<div id="MainWizardbottom"> 
</div> 
</div> 
</div> 
<div class="clear_float"></div> 
 
</div> 
</td> 
<td id="Dataspalte"> 
<div align=center> 
<div id="content"> 
 
<div class="backtitel"><div class="rundrt"><div class="rundlt"><div class="ecklb"><div class="eckrb"><div class="foretitel"> 
 
Anrufe
</div></div></div></div></div></div> 
<div class="backframe"><div class="ecklm"><div class="eckrm"><div class="ecklb"><div class="eckrb"><div class="foredialog"><div class="ie_b10"> 
<ul class="tabs"> 
<li class="tabs_on"><div class="activtab">Anrufliste</div></li> 
<li><a href="javascript:jslGoTo(jslGetValue('uiPostMenu'),'sperre')">Anrufe sperren</a></li> 
<li><a href="javascript:jslGoTo(jslGetValue('uiPostMenu'),'dial')">Wählhilfe</a></li> 
</ul> 
<div class="backdialog"><div class="ecklm"><div class="eckrm"><div class="ecklb"><div class="eckrb"><div class="foredialog"><div class="ie_b10"> 
<p class="ml2 mb10">Die Anrufliste erfasst alle Telefonate und ankommenden Anrufe in Abwesenheit.</p> 
<p class="mb10" id="UseJournal"><input style="margin-left: 0px;" type="checkbox" id="uiViewUseJournal" OnClick="ShowMsg();">&nbsp;<label for="uiViewUseJournal">Anrufliste anzeigen <span id="uiShowCnt">&nbsp;</span></label></p> 
<ul class="foncalltabs"> 
<div id="uiShowTabAll"> 
<li class="tabs_on"><div class="activtab">&nbsp;Alle Anrufe</div></li> 
<li ><a href="javascript:uiDoSetType(3)"><img src="../html/de/images/Callout.gif">&nbsp;Ausgehende Anrufe</a></li> 
<li ><a href="javascript:uiDoSetType(1)"><img src="../html/de/images/Callin.gif">&nbsp;Ankommende Anrufe</a></li> 
<li ><a href="javascript:uiDoSetType(2)"><img src="../html/de/images/Callinfailed.gif">&nbsp;Anrufe in Abwesenheit</a></li> 
</div> 
<div id="uiShowTabOut" style="display:none"> 
<li ><a href="javascript:uiDoSetType(0)">&nbsp;Alle Anrufe</a></li> 
<li class="tabs_on" ><div class="activtab"><img src="../html/de/images/Callout.gif">&nbsp;Ausgehende Anrufe</div></li> 
<li ><a href="javascript:uiDoSetType(1)"><img src="../html/de/images/Callin.gif">&nbsp;Ankommende Anrufe</a></li> 
<li ><a href="javascript:uiDoSetType(2)"><img src="../html/de/images/Callinfailed.gif">&nbsp;Anrufe in Abwesenheit</a></li> 
</div> 
<div id="uiShowTabIn" style="display:none"> 
<li ><a href="javascript:uiDoSetType(0)">&nbsp;Alle Anrufe</a></li> 
<li ><a href="javascript:uiDoSetType(3)"><img src="../html/de/images/Callout.gif">&nbsp;Ausgehende Anrufe</a></li> 
<li class="tabs_on" ><div class="activtab"><img src="../html/de/images/Callin.gif">&nbsp;Ankommende Anrufe</div></li> 
<li ><a href="javascript:uiDoSetType(2)"><img src="../html/de/images/Callinfailed.gif">&nbsp;Anrufe in Abwesenheit</a></li> 
</div> 
<div id="uiShowTabFailed" style="display:none"> 
<li ><a href="javascript:uiDoSetType(0)">&nbsp;Alle Anrufe</a></li> 
<li ><a href="javascript:uiDoSetType(3)"><img src="../html/de/images/Callout.gif">&nbsp;Ausgehende Anrufe</a></li> 
<li ><a href="javascript:uiDoSetType(1)"><img src="../html/de/images/Callin.gif">&nbsp;Ankommende Anrufe</a></li> 
<li class="tabs_on"><div class="activtab"><img src="../html/de/images/Callinfailed.gif">&nbsp;Anrufe in Abwesenheit</div></li> 
</div> 
</ul> 
<div class="backdialog"><div class="ecklm"><div class="eckrm"><div class="ecklb"><div class="eckrb"><!--[if IE 7]><div style="margin-top:-10px;"><![endif]--><div class="foncallforedialog"><div class="ie_b10"> 
<div class="mb5 tborder showFoncalls ie_foncall" style="height: 300px; width: 750px; overflow: auto;" id="uiShowFoncalls"> 
<table id="tClient"> 
<tr> 
<th class="c1"></th> 
<th class="c3">Datum</th> 
<th class="c8">Name / Rufnummer</th> 
<th class="c5">Telefoniegerät</th> 
<th class="c7">Eigene Rufnummer</th> 
<th class="c6">Dauer (hh:mm)</th> 
<th class="c9">&nbsp;</th> 
</tr> 
 
<script type="text/javascript">document.write(TrCall("3", "19.12.10 14:23", "AVM Ansage (HD)", "**799", "0", "0", "1", "0:01","work","DECT extern"));</script> 
 
<script type="text/javascript">document.write(TrCall("1", "19.12.10 12:55", "", "", "0", "0", "1", "0:04","","DECT extern"));</script> 
 
<script type="text/javascript">document.write(TrCall("3", "18.12.10 00:34", "A. Muster", "07216080", "0", "2", "1", "0:02","mobile","DECT extern"));</script> 
 
 
</table> 
</div> 
<div class="ar mt10 iepr7"> 
<input type="button" onclick="uiDoExport()" value="Sichern" class="Pushbutton" style="display:none" id="buttonExport"> 
<input type="button" onclick="uiDoClear()" value="Liste löschen" class="PushbuttonBig" id="buttonClear"> 
<input type="button" onclick="uiDoRefresh()" value="Aktualisieren" class="Pushbutton" id="buttonRefresh"> 
</div> 
</div></div></div></div></div><!--[if IE 7]></div><![endif]--></div></div> 
</div></div></div></div></div></div></div> 
</div></div></div></div></div></div></div> 
<div class="backdialog"><div class="ecklm"><div class="eckrm"><div class="rundrb"><div class="rundlb"><div class="forebuttons"> 
 
<input type="button" onclick="uiDoSave()" value="Übernehmen" class="Pushbutton" id="buttonSave"> 
<input type="button" onclick="uiDoCancel()" value="Abbrechen" class="Pushbutton" id="buttonCancel"> 
 
<input type="button" onclick="uiDoHelp()" value="Hilfe" class="Pushbutton" id="buttonHelp"> 
</div></div></div></div></div></div> 
</div></div></div></div></div></div> 
<!--content endet hier--> 
</div> 
 
</div> 
<div class="clear_float"></div> 
<div style="position:relative; top:-5px;"> 
<div class="page_left_bottom"></div> 
<div class="page_right_bottom"></div> 
<div class="page_back_bottom" style=""> 
<div id="MainPagebottom"> 
</div> 
</div> 
</div> 
</td> 
</tr> 
</table> 
</div> 
<div class="fw_footer"> 
</div> 
</td></tr> 
</table> 
<!-- Post Form --> 
<form method="POST" action="../cgi-bin/webcm" target="_self" id="uiPostForm" name="uiPostForm"> 
<!-- Refresh Form --> 
<input type="hidden" name="sid" value="3a8ef4a34cfcf8a7" id="uiPostSid"> 
<input type="hidden" name="getpage" value="../html/de/menus/menu2.html" id="uiPostGetPage"> 
<input type="hidden" name="errorpage" value="../html/de/menus/menu2.html" id="uiPostErrPage"> 
<input type="hidden" name="var:pagename" value="foncalls" id="uiPostPageName"> 
<input type="hidden" name="var:errorpagename" value="foncalls" id="uiPostErrorPageName"> 
<input type="hidden" name="var:menu" value="fon" id="uiPostMenu"> 
<input type="hidden" name="var:pagemaster" value="" id="uiPostPageMaster"> 
<input type="hidden" name="time:settings/time" value="" id="uiPostDateTime"> 
<input type="hidden" name="box:settings/webui_cookie" value="" disabled> 
<!-- END Refresh Form --> 
 
<input type="hidden" name="var:showDialing" value="" id="uiPostShowDialing" > 
<input type="hidden" name="var:type" value="" id="uiPostType"> 
<input type="hidden" name="var:vonFoncalls" value="0" id="uiPostVonFoncalls"> 
<input type="hidden" name="var:currFonbookID" value="" id="uiPostCurrFonbookID" > 
<input type="hidden" name="var:PhonebookEntryNew" value="" id="uiPostEntryNew"> 
<input type="hidden" name="var:PhonebookEntryXCount" value="" id="uiPostEntryXCount"> 
<input type="hidden" name="var:PhonebookEntryNumber" value="" id="uiPostEntryNumber"> 
<input type="hidden" name="telcfg:settings/Phonebook/Id" value="0" id="uiPostPhonebookId" disabled> 
<input type="hidden" name="telcfg:settings/Phonebook/Books/Select" value="" id="uiPostPhonebookSelect" disabled> 
<input type="hidden" name="telcfg:settings/ClearJournal" value="" id="uiPostClearJournal" disabled> 
<input type="hidden" name="telcfg:settings/UseClickToDial" value="1" id="uiPostClickToDial" disabled> 
<input type="hidden" name="telcfg:settings/DialPort" value="1" id="uiPostDialPort" disabled> 
<input type="hidden" name="telcfg:settings/UseJournal" value="1" id="uiPostUseJournal"> 
<input type="hidden" name="telcfg:command/Dial" value="" id="uiPostDial" disabled> 
<input type="hidden" name="telcfg:command/Hangup" value="" id="uiPostHangup" disabled> 
 
<input type="hidden" name="telcfg:settings/MSN/Port0/Name" value="DECT extern" id="uiPostFon0" disabled> 
 
<input type="hidden" name="telcfg:settings/MSN/Port1/Name" value="" id="uiPostFon1" disabled> 
 
<input type="hidden" name="telcfg:settings/MSN/Port2/Name" value="" id="uiPostFon2" disabled> 
 
 
<input type="hidden" name="telcfg:settings/NTHotDialList/Name1" value="ISDN-Telefonanlage" id="uiPostIsdn1" disabled> 
<input type="hidden" name="telcfg:settings/NTHotDialList/Number1" value="51" id="uiPostIsdnNumber1" disabled> 
 
<input type="hidden" name="telcfg:settings/NTHotDialList/Name2" value="" id="uiPostIsdn2" disabled> 
<input type="hidden" name="telcfg:settings/NTHotDialList/Number2" value="" id="uiPostIsdnNumber2" disabled> 
 
<input type="hidden" name="telcfg:settings/NTHotDialList/Name3" value="" id="uiPostIsdn3" disabled> 
<input type="hidden" name="telcfg:settings/NTHotDialList/Number3" value="" id="uiPostIsdnNumber3" disabled> 
 
<input type="hidden" name="telcfg:settings/NTHotDialList/Name4" value="" id="uiPostIsdn4" disabled> 
<input type="hidden" name="telcfg:settings/NTHotDialList/Number4" value="" id="uiPostIsdnNumber4" disabled> 
 
<input type="hidden" name="telcfg:settings/NTHotDialList/Name5" value="" id="uiPostIsdn5" disabled> 
<input type="hidden" name="telcfg:settings/NTHotDialList/Number5" value="" id="uiPostIsdnNumber5" disabled> 
 
<input type="hidden" name="telcfg:settings/NTHotDialList/Name6" value="" id="uiPostIsdn6" disabled> 
<input type="hidden" name="telcfg:settings/NTHotDialList/Number6" value="" id="uiPostIsdnNumber6" disabled> 
 
<input type="hidden" name="telcfg:settings/NTHotDialList/Name7" value="" id="uiPostIsdn7" disabled> 
<input type="hidden" name="telcfg:settings/NTHotDialList/Number7" value="" id="uiPostIsdnNumber7" disabled> 
 
<input type="hidden" name="telcfg:settings/NTHotDialList/Name8" value="" id="uiPostIsdn8" disabled> 
<input type="hidden" name="telcfg:settings/NTHotDialList/Number8" value="" id="uiPostIsdnNumber8" disabled> 
 
 
 
 
<input type="hidden" name="telcfg:settings/Foncontrol/User0/Name" value="" id="uiPostFoncontrol0" disabled> 
<input type="hidden" name="telcfg:settings/Foncontrol/User0/Intern" value="" id="uiPostFoncontrolIntern0" disabled> 
 
 
<input type="hidden" name="var:WaehlhilfeVon" value="" id="uiWaehlhilfeVon"> 
</form> 
<form method="GET" action="../cgi-bin/webcm" target="_self" id="uiPostExport"> 
<input type="hidden" name="sid" value="3a8ef4a34cfcf8a7" id="uiPostSid"> 
<input type="hidden" name="getpage" value="../html/de/FRITZ!Box_Anrufliste.csv"> 
 
</form> 
<!-- END Post Form --> 
 
<form name="logoutForm" action="../cgi-bin/webcm" method="POST"> 
<input type="hidden" name="sid" value="3a8ef4a34cfcf8a7"> 
<input type="hidden" name="security:command/logout" value=""> 
<input type="hidden" name="getpage" value="../html/confirm_logout.html"> 
</form> 
</body> 
</html> 